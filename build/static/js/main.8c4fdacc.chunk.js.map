{"version":3,"sources":["utils/toaster.js","utils/ErrorHandler.js","utils/httpClient.js","components/common/SubmitButton/SubmitButtonComponent.js","components/auth/forgotPassword/ForgotPasswordComponent.js","utils/util.js","components/auth/login/Login.component.js","components/auth/register/Register.component.js","components/auth/ResetPassword/ResetPasswordComp.js","components/Carts/CartHelper.js","components/common/header/HeaderComponent.js","utils/dateUtil.js","components/common/Loader/LoaderComp.js","Redux/Constants/ProductConstant.js","Redux/Actions/ProductAction.js","components/Products/ViewProduct/ViewProductComponent.js","components/common/Product/Product.js","components/common/ProductView/ProductViewComp.js","components/Home/HomeComp.js","components/common/sidebar/SidebarComponent.js","components/Products/ProductForm/ProductFormComponent.js","components/Products/AddProduct/AddProductComponent.js","components/Products/EditProduct/EditProductComponent.js","components/Products/ProductDetailsLanding/ProductDetails/ProductDetailsComp.js","components/Products/ProductDetailsLanding/ReviewForm/ReviewFormComp.js","components/Products/ProductDetailsLanding/ProductDetailsLanding.js","components/Products/SearchProduct/SearchProductComp.js","components/Users/Messages/MessageComp.js","components/Braintree/BraintreeComp.js","components/Checkout/CheckoutComp.js","components/Carts/CartComp.js","components/Orders/OrderCompHelper.js","components/Orders/OrderComp.js","components/Dashboard/DashboardComp.js","components/AppRouting.js","Redux/Reducers/ProductReducer.js","Redux/Reducers/index.js","Redux/store.js","components/App.component.js","index.js"],"names":["notify","msg","toast","success","info","error","handleError","err","response","errMsg","data","BASE_URL","process","http","axios","create","baseURL","responseType","timeout","timeoutErrorMessage","getHeaders","secured","options","Accept","localStorage","getItem","httpClient","url","isSecure","params","get","headers","post","put","delete","method","files","Promise","resolve","reject","xhr","XMLHttpRequest","formData","FormData","key","forEach","file","append","name","onreadystatechange","readyState","status","open","send","SubmitButton","props","disabledLabel","enabledLabel","isSubmitting","disabled","className","type","isDisabled","ForgotPassword","handleChange","e","target","value","setState","state","email","includes","emailErr","handleSubmit","preventDefault","then","history","push","catch","onSubmit","this","noValidate","placeholder","onChange","to","Component","Dashboard","user","role","defaultForm","username","password","Login","onSubmitHandler","validateForm","setItem","token","JSON","stringify","remember_me","onChangeHandler","checked","preState","usernameErr","passwordErr","isValidForm","parse","htmlFor","id","phoneNumber","confirmPassword","gender","dob","temporaryAddress","permanentAddress","errFields","Register","validateRequiredFields","fieldName","length","errors","Object","values","filter","validForm","confirmPasswordErr","ResetPassword","console","log","match","itemTotal","window","Header","withRouter","currentUser","content","isLoggedIn","onClick","clear","formatDate","date","format","moment","relativeTime","startOf","fromNow","Loader","SET_ISLOADING","SET_ISSUBMITTING","PRODUCTS_RECEIVED","PRODUCT_RECEIVED","PRODUCT_REMOVED","REVIEW_ADDED","SET_PAGE_NUMBER","loading","isLoading","payload","submitting","ViewProductsComponent","editProduct","removeProduct","confirm","remove","changePage","evt","pageNumber","change_page","fetch","pageSize","products","results","map","product","index","_id","category","price","color","createdAt","tags","join","src","images","alt","width","height","style","cursor","title","textAlign","colSpan","resetSearch","ViewProducts","connect","rootStore","dispatch","finally","fetchProducts_ac","productId","removeProduct_ac","page","changePageNumber_ac","Product","imageUrl","stockLeft","description","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","useState","redirect","setRedirect","count","setCount","cart","updateItem","shouldRedirect","item","next","Array","from","Set","p","find","addItem","splice","removeItem","showCartUpdateOptions","ProductView","idx","quantity","brand","minPrice","maxPrice","HomeComp","prepareNames","selectedCategory","names","allProducts","searchResults","categories","cat","Sidebar","class","activeClassName","isReturnEligible","warrentyStatus","warrentyPeroid","purchasedDate","manuDate","discountedItem","discountType","discountValue","expiryDate","salesDate","validationFields","ProductForm","filesToUpload","selectedFiles","temp_id","Date","now","img","URL","createObjectURL","filesOnly","submitCallback","filesToRemove","removeExistingImage","removeSelectedImage","isEditMode","productData","discount","rows","Fragment","marginLeft","AddProduct","add","requestData","EditProduct","edit","IMG_URL","ProductDetails","getImages","original","thumbnail","items","reviews","result","starDimension","rating","point","starEmptyColor","starHoverColor","starRatedColor","numberOfStars","message","reviewPoint","reviewMessage","ReviewForm","changeRating","newRating","addReview","ProductDetailsLanding","fetchProduct_ac","add_review","reviewData","addReview_ac","fromDate","toDate","multipleDateRange","SearchProduct","MessageComponent","runSocket","socket","emit","on","messages","messageBody","receiverId","senderId","receiverName","senderName","users","time","currentSender","selectUser","io","display","Checkout","clientToken","instance","address","setData","userId","deliveryAdd","getToken","Authorization","json","getBraintreeClientToken","useEffect","getTotal","reduce","currentValue","nextValue","onBlur","event","authorization","onInstance","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","body","processPayment","createOrderData","transaction_id","transaction","order","createOrder","Cart","setItems","showItems","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showProducts","i","padding","border","handleStatusChange","orderId","updateOrderStatus","showStatus","o","borderBottom","loopOrder","DashboardComp","tempAddress","About","Settings","NotFound","ProtectedRoute","component","rest","render","routeProps","PublicRoute","AuthRoute","AppRouting","path","exact","defaultState","RootReducer","combineReducers","action","notification","middleware","thunk","store","createStore","applyMiddleware","App","container","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.8c4fdacc.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\r\n\r\nconst showSuccess = (msg) => {\r\n  toast.success(msg);\r\n};\r\nconst showInfo = (msg) => {\r\n  toast.info(msg);\r\n};\r\n\r\nconst showWarning = (msg) => {\r\n  toast.warning(msg);\r\n};\r\n\r\nconst showError = (msg) => {\r\n  toast.error(msg);\r\n};\r\n\r\nexport const notify = {\r\n  showSuccess,\r\n  showInfo,\r\n  showWarning,\r\n  showError,\r\n};\r\n","import { notify } from './toaster';\r\nexport const handleError = (error) => {\r\n  debugger;\r\n\r\n  let err = error.response;\r\n  let errMsg = 'Something went wrong';\r\n  if (err) {\r\n    errMsg = err && err.data && err.data.msg;\r\n  }\r\n  notify.showError(errMsg);\r\n  // accept error\r\n  // check error\r\n  // parse error\r\n  // prepare error\r\n  // show them in UI\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst http = axios.create({\r\n  baseURL: BASE_URL,\r\n  responseType: 'json',\r\n  timeout: 10000,\r\n  timeoutErrorMessage: 'Timeout! Response too long',\r\n});\r\n\r\nconst getHeaders = (secured) => {\r\n  let options = {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  };\r\n  if (secured) {\r\n    options['Authorization'] = localStorage.getItem('token');\r\n  }\r\n  return options;\r\n};\r\n\r\nconst GET = (url, isSecure = false, params = {}) => {\r\n  return http.get(url, {\r\n    headers: getHeaders(isSecure),\r\n    params,\r\n  });\r\n  // promise handle\r\n};\r\n\r\nconst POST = (url, data, isSecure = false, params = {}) => {\r\n  return http.post(url, data, {\r\n    headers: getHeaders(isSecure),\r\n    params,\r\n  });\r\n};\r\n\r\nconst PUT = (url, data, isSecure = false, params = {}) => {\r\n  return http.put(url, data, {\r\n    headers: getHeaders(isSecure),\r\n    params,\r\n  });\r\n};\r\n\r\nconst DELETE = (url, isSecure = false, params = {}) => {\r\n  return http.delete(url, {\r\n    headers: getHeaders(isSecure),\r\n    params,\r\n  });\r\n};\r\n\r\nconst UPLOAD = (method, url, data, files = []) => {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    const formData = new FormData();\r\n\r\n    // Append files to formData\r\n    files.forEach((file) => {\r\n      formData.append('image', file, file.name);\r\n    });\r\n\r\n    // Append textual files to formData\r\n    // Data will be a object\r\n    for (let key in data) {\r\n      formData.append(key, data[key]);\r\n    }\r\n\r\n    xhr.onreadystatechange = () => {\r\n      // console.log('check status=>', xhr.status);\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject(xhr.response);\r\n        }\r\n      }\r\n    };\r\n\r\n    // use xhr method to send formData\r\n    xhr.open(\r\n      method,\r\n      `${BASE_URL}/${url}?token=${localStorage.getItem('token')}`,\r\n      true\r\n    );\r\n    xhr.send(formData);\r\n  });\r\n};\r\n\r\nexport const httpClient = {\r\n  GET,\r\n  POST,\r\n  PUT,\r\n  DELETE,\r\n  UPLOAD,\r\n};\r\n","import React from 'react';\r\n\r\nexport const SubmitButton = (props) => {\r\n  const disabledLabel = props.disabledLabel || 'submitting...';\r\n  const enabledLabel = props.enabledLabel || 'submit';\r\n\r\n  let btn = props.isSubmitting ? (\r\n    <button disabled className='btn btn-info'>\r\n      {disabledLabel}\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type='submit'\r\n      disabled={props.isDisabled}\r\n      className='btn btn-primary'\r\n    >\r\n      {enabledLabel}\r\n    </button>\r\n  );\r\n  return btn;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleError } from './../../../utils/ErrorHandler';\r\nimport { httpClient } from './../../../utils/httpClient';\r\nimport { notify } from './../../../utils/toaster';\r\nimport { SubmitButton } from './../../common/SubmitButton/SubmitButtonComponent';\r\n\r\nexport class ForgotPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: '',\r\n      emailErr: true,\r\n      isSubmitting: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let errMsg;\r\n    this.setState(\r\n      {\r\n        [name]: value,\r\n      },\r\n      () => {\r\n        errMsg = this.state.email\r\n          ? this.state.email.includes('@') && this.state.email.includes('.com')\r\n            ? ''\r\n            : 'invalid email'\r\n          : 'required field';\r\n        this.setState({\r\n          emailErr: errMsg,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n    e.preventDefault();\r\n    httpClient\r\n      .POST('/auth/forgot-password', { email: this.state.email })\r\n      .then((response) => {\r\n        notify.showInfo(\r\n          'Password reset link sent to your email please check your inbox'\r\n        );\r\n        this.props.history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <h2>Forgot Password</h2>\r\n        <p>Please Provide registered email to reset your password</p>\r\n        <form className=\"form-group\" onSubmit={this.handleSubmit} noValidate>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Email address here\"\r\n            className=\"form-control\"\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          <p className=\"error\">{this.state.emailErr}</p>\r\n          <SubmitButton\r\n            isSubmitting={this.state.isSubmitting}\r\n            isDisabled={this.state.emailErr}\r\n          ></SubmitButton>\r\n        </form>\r\n        <p>\r\n          back to <Link to=\"/\">login</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const redirectToLogin = () => {};\r\n\r\nconst redirectToHome = () => {};\r\n\r\nconst redirectToDashboard = (props, response) => {\r\n  // console.log('response ==>', response.data.user.role);\r\n  if (response.data.user.role !== 1) {\r\n    props.push('/dashboard');\r\n  } else {\r\n    props.push('/admin/dashboard');\r\n  }\r\n};\r\n\r\nexport const Dashboard = {\r\n  redirectToDashboard,\r\n  redirectToHome,\r\n  redirectToLogin,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { notify } from './../../../utils/toaster';\r\n\r\nimport { handleError } from './../../../utils/ErrorHandler';\r\nimport { Dashboard } from './../../../utils/util';\r\nimport { httpClient } from '../../../utils/httpClient';\r\nimport { SubmitButton } from './../../common/SubmitButton/SubmitButtonComponent';\r\n\r\nimport './Login.component.css';\r\nconst defaultForm = {\r\n  username: '',\r\n  password: '',\r\n};\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // username: '',\r\n      // password: '',\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n      error: {\r\n        ...defaultForm,\r\n      },\r\n      isValidForm: false,\r\n      isSubmitting: false,\r\n      remember_me: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var rememberMe = JSON.parse(localStorage.getItem('remember_me'));\r\n    if (rememberMe) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    // notify.showInfo('login clicked');\r\n    e.preventDefault();\r\n    let isValidForm = this.validateForm();\r\n    if (!isValidForm) {\r\n      return;\r\n    }\r\n    // console.log('Form submit here', this.state);\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n    httpClient\r\n      .POST(`/auth/login`, this.state.data)\r\n      .then((response) => {\r\n        notify.showSuccess(`Welcome ${response.data.user.username}`);\r\n        // localstorage setup\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        localStorage.setItem('remember_me', this, this.setState.remember_me);\r\n\r\n        // Navigate to specific link\r\n        // console.log('this.props.history.push()=>', this.props);\r\n        // console.log('response is >>', response);\r\n        Dashboard.redirectToDashboard(this.props.history, response);\r\n        // this.props.history.push('/dashboard');\r\n        // console.log('response is >>', response);\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    let { name, value, type, checked } = e.target;\r\n\r\n    if (type === 'checkbox') {\r\n      return this.setState({\r\n        remember_me: checked,\r\n      });\r\n    }\r\n    this.setState(\r\n      (preState) => ({\r\n        data: {\r\n          ...preState.data,\r\n          [name]: value,\r\n        },\r\n      }),\r\n      () => {\r\n        if (this.state.error[name]) {\r\n          this.validateForm();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  validateForm = () => {\r\n    let usernameErr = this.state.data['username'] ? '' : 'required field*';\r\n    let passwordErr = this.state.data['password'] ? '' : 'required field*';\r\n\r\n    this.setState({\r\n      error: {\r\n        username: usernameErr,\r\n        password: passwordErr,\r\n      },\r\n    });\r\n\r\n    let validForm = !(usernameErr || passwordErr);\r\n    return validForm;\r\n  };\r\n  // validateForm = (fieldName) => {\r\n  //   let errMsg;\r\n  //   switch (fieldName) {\r\n  //     case 'username':\r\n  //       errMsg = this.state.data[fieldName] ? '' : 'Required field*';\r\n  //       break;\r\n  //     case 'password':\r\n  //       errMsg = this.state.data[fieldName] ? '' : 'Required field*';\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n\r\n  //   this.setState(\r\n  //     (preState) => ({\r\n  //       error: {\r\n  //         ...preState.error,\r\n  //         [fieldName]: errMsg,\r\n  //       },\r\n  //     }),\r\n  //     () => {\r\n  //       const errors = Object.values(this.state.error).filter((err) => err);\r\n  //       console.log('errors is >>', errors);\r\n  //       this.setState({\r\n  //         isValidForm: errors.length === 0,\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // };\r\n  render() {\r\n    let btn = this.state.isSubmitting ? (\r\n      <button disabled className='btn btn-primary btn-sm'>\r\n        Logging in..\r\n      </button>\r\n    ) : (\r\n      <button type='submit' className='btn btn-primary btn-sm'>\r\n        Login\r\n      </button>\r\n    );\r\n    return (\r\n      <div className='col-md-4 login'>\r\n        <div className='container form-control bg-color'>\r\n          <h2>Login</h2>\r\n          <p>Please login to Proceed</p>\r\n          <form\r\n            className='form-group form-control bg-color'\r\n            onSubmit={this.onSubmitHandler}\r\n          >\r\n            <label htmlFor='username'>Username</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              placeholder='Username'\r\n              name='username'\r\n              id='username'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <p className='error'>{this.state.error.username}</p>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              className='form-control'\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              id='password'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <p className='error'>{this.state.error.password}</p>\r\n\r\n            <input\r\n              type='checkbox'\r\n              name='remember_me'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <label> &nbsp; Remember Me</label>\r\n            <br />\r\n            <SubmitButton\r\n              isSubmitting={this.state.isSubmitting}\r\n              enabledLabel='Login'\r\n              disabledLabel='Loging in...'\r\n            ></SubmitButton>\r\n          </form>\r\n          <p>Don't Have an Account?</p>\r\n          <p className='float-right'>\r\n            Register <Link to='/register'>here</Link>\r\n          </p>\r\n          <p className='float-left'>\r\n            {' '}\r\n            <Link to='/forgot_password'>forgot password?</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { notify } from './../../../utils/toaster';\r\n\r\nimport { handleError } from '../../../utils/ErrorHandler';\r\nimport { httpClient } from '../../../utils/httpClient';\r\nimport { SubmitButton } from './../../common/SubmitButton/SubmitButtonComponent';\r\n\r\nimport './Register.component.css';\r\n\r\nconst defaultForm = {\r\n  name: '',\r\n  phoneNumber: '',\r\n  email: '',\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  gender: '',\r\n  dob: '',\r\n  temporaryAddress: '',\r\n  permanentAddress: '',\r\n};\r\n\r\nconst errFields = {\r\n  username: false,\r\n  password: false,\r\n  email: false,\r\n  confirmPassword: false,\r\n};\r\n\r\nexport class Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n      error: {\r\n        ...errFields,\r\n      },\r\n      isValidForm: false,\r\n      isSubmitting: false,\r\n    };\r\n  }\r\n\r\n  // initial\r\n  componentDidMount() {\r\n    // console.log('Component Mounted.');\r\n  }\r\n\r\n  // Update Stage\r\n  // componentDidUpdate(preProps, PreState) {\r\n  //   console.log('PrevState ==>', PreState.data);\r\n  //   console.log('Current State ==>', this.state.data);\r\n  // }\r\n\r\n  // Destroy\r\n  componentWillUnmount() {\r\n    // console.log('componentWillUnmont-> Usage completed.');\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const isValidForm = this.validateRequiredFields();\r\n    if (!isValidForm) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n    //  api call\r\n    httpClient\r\n      .POST(`/auth/register`, this.state.data)\r\n      .then((response) => {\r\n        notify.showInfo('Registration successfull..Now Login');\r\n        this.props.history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    let { name, value } = e.target;\r\n\r\n    this.setState(\r\n      (preState) => ({\r\n        data: {\r\n          ...preState.data,\r\n          [name]: value,\r\n        },\r\n      }),\r\n      () => {\r\n        this.validateForm(name);\r\n      }\r\n    );\r\n  };\r\n\r\n  validateForm = (fieldName) => {\r\n    let errMsg;\r\n    switch (fieldName) {\r\n      case 'username':\r\n        errMsg = this.state.data[fieldName] ? '' : 'required field*';\r\n        break;\r\n\r\n      case 'password':\r\n        errMsg = this.state.data[fieldName]\r\n          ? this.state.data['confirmPassword']\r\n            ? this.state.data['confirmPassword'] === this.state.data[fieldName]\r\n              ? ''\r\n              : 'password did not match'\r\n            : this.state.data[fieldName].length > 6\r\n            ? ''\r\n            : 'weak password'\r\n          : 'required field*';\r\n        break;\r\n      case 'confirmPassword':\r\n        errMsg = this.state.data[fieldName]\r\n          ? this.state.data['password']\r\n            ? this.state.data['password'] === this.state.data[fieldName]\r\n              ? ''\r\n              : 'password did not match'\r\n            : this.state.data[fieldName].length > 6\r\n            ? ''\r\n            : 'weak password'\r\n          : 'required field*';\r\n        break;\r\n      case 'email':\r\n        errMsg = this.state.data[fieldName]\r\n          ? this.state.data[fieldName].includes('@') &&\r\n            this.state.data[fieldName].includes('.com')\r\n            ? ''\r\n            : 'invalid email'\r\n          : 'required field*';\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState(\r\n      (preState) => ({\r\n        error: {\r\n          ...preState.error,\r\n          [fieldName]: errMsg,\r\n        },\r\n      }),\r\n      () => {\r\n        const errors = Object.values(this.state.error).filter((err) => err);\r\n        // console.log('errors is >>', errors);\r\n        this.setState({\r\n          isValidForm: errors.length === 0,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  validateRequiredFields = () => {\r\n    let validForm = true;\r\n    let usernameErr = false;\r\n    let passwordErr = false;\r\n    let confirmPasswordErr = false;\r\n    let emailErr = false;\r\n\r\n    if (!this.state.data.username) {\r\n      validForm = false;\r\n      usernameErr = 'required field*';\r\n    }\r\n    if (!this.state.data.password) {\r\n      validForm = false;\r\n      passwordErr = 'required field*';\r\n    }\r\n    if (!this.state.data.confirmPassword) {\r\n      validForm = false;\r\n      confirmPasswordErr = 'required field*';\r\n    }\r\n    if (!this.state.data.email) {\r\n      validForm = false;\r\n      emailErr = 'required field*';\r\n    }\r\n\r\n    this.setState({\r\n      error: {\r\n        username: usernameErr,\r\n        password: passwordErr,\r\n        confirmPassword: confirmPasswordErr,\r\n        email: emailErr,\r\n      },\r\n    });\r\n\r\n    return validForm;\r\n  };\r\n  render() {\r\n    let btn = this.state.isSubmitting ? (\r\n      <button disabled className='btn btn-primary btn-sm'>\r\n        Submitting..\r\n      </button>\r\n    ) : (\r\n      <button\r\n        disabled={!this.state.isValidForm}\r\n        type='submit'\r\n        className='btn btn-primary btn-sm'\r\n      >\r\n        Submit\r\n      </button>\r\n    );\r\n    return (\r\n      <div className='col-md-6 register'>\r\n        <div className='form-control bg-color'>\r\n          <h2>Register</h2>\r\n          <p>Please fill up the following details</p>\r\n          <form\r\n            className='form-group form-control bg-color'\r\n            onSubmit={this.onSubmitHandler}\r\n          >\r\n            <label htmlFor='name'>Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              placeholder='Name'\r\n              name='name'\r\n              id='name'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <label htmlFor='email'>Email</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              placeholder='Email'\r\n              name='email'\r\n              id='email'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <p className='error'>{this.state.error.email}</p>\r\n            <label htmlFor='phoneNumber'>Phone Number</label>\r\n            <input\r\n              className='form-control'\r\n              type='number'\r\n              name='phoneNumber'\r\n              id='phoneNumber'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <label htmlFor='username'>Username</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              placeholder='Username'\r\n              name='username'\r\n              id='username'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <p className='error'>{this.state.error.username}</p>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              className='form-control'\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              id='password'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <p className='error'>{this.state.error.password}</p>\r\n            <label>Confirm Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              name='confirmPassword'\r\n              placeholder='Confirm Password'\r\n              onChange={this.onChangeHandler}\r\n            />\r\n            <p className='error'>{this.state.error.confirmPassword}</p>\r\n            <label>Gender</label>\r\n            <br />\r\n            <input\r\n              type='radio'\r\n              value='male'\r\n              name='gender'\r\n              onChange={this.onChangeHandler}\r\n            />{' '}\r\n            Male\r\n            <input\r\n              type='radio'\r\n              value='female'\r\n              name='gender'\r\n              onChange={this.onChangeHandler}\r\n            />{' '}\r\n            Female\r\n            <input\r\n              type='radio'\r\n              value='others'\r\n              name='gender'\r\n              onChange={this.onChangeHandler}\r\n            />{' '}\r\n            Others\r\n            <br />\r\n            <label>Date Of Birth</label>\r\n            <input\r\n              type='date'\r\n              name='dob'\r\n              className='form-control'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <label>Temporary Address</label>\r\n            <input\r\n              type='text'\r\n              name='temporaryAddress'\r\n              placeholder='Temporary Address'\r\n              className='form-control'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <label>Permanent Address</label>\r\n            <input\r\n              type='text'\r\n              name='permanentAddress'\r\n              placeholder='Permanent Address'\r\n              className='form-control'\r\n              onChange={this.onChangeHandler}\r\n            ></input>\r\n            <hr />\r\n            <SubmitButton\r\n              isSubmitting={this.state.isSubmitting}\r\n              isDisabled={!this.state.isValidForm}\r\n            ></SubmitButton>\r\n          </form>\r\n          <p>\r\n            Already Registered? <Link to='/'>back to login</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleError } from './../../../utils/ErrorHandler';\r\nimport { httpClient } from './../../../utils/httpClient';\r\nimport { notify } from './../../../utils/toaster';\r\nimport { SubmitButton } from './../../common/SubmitButton/SubmitButtonComponent';\r\n\r\nconst defaultForm = {\r\n  password: '',\r\n  confirmPassword: '',\r\n};\r\n\r\nexport class ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n      error: {\r\n        ...defaultForm,\r\n      },\r\n      isSubmitting: false,\r\n      isValidForm: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.token = this.props.match.params['token'];\r\n  }\r\n\r\n  validateForm = (fieldName, type = 'change') => {\r\n    if (type === 'submit') {\r\n      console.log('Inside Submit..');\r\n      let passwordErr = false;\r\n      let confirmPasswordErr = false;\r\n      let validForm = true;\r\n\r\n      if (!this.state.data['password']) {\r\n        passwordErr = 'required field*';\r\n        validForm = false;\r\n      }\r\n\r\n      if (!this.state.data['confirmPassword']) {\r\n        confirmPasswordErr = 'required field*';\r\n        validForm = false;\r\n      }\r\n\r\n      this.setState({\r\n        error: {\r\n          password: passwordErr,\r\n          confirmPassword: confirmPasswordErr,\r\n        },\r\n      });\r\n\r\n      return validForm;\r\n    }\r\n\r\n    let errMsg;\r\n\r\n    switch (fieldName) {\r\n      case 'password':\r\n        errMsg = this.state.data[fieldName]\r\n          ? this.state.data['confirmPassword']\r\n            ? this.state.data['confirmPassword'] === this.state.data[fieldName]\r\n              ? ''\r\n              : 'password did not match'\r\n            : this.state.data[fieldName].length > 6\r\n            ? ''\r\n            : 'weak password'\r\n          : 'required field*';\r\n        break;\r\n      case 'confirmPassword':\r\n        errMsg = this.state.data[fieldName]\r\n          ? this.state.data['password']\r\n            ? this.state.data['password'] === this.state.data[fieldName]\r\n              ? ''\r\n              : 'password did not match'\r\n            : this.state.data[fieldName].length > 6\r\n            ? ''\r\n            : 'weak password'\r\n          : 'required field*';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState(\r\n      (preState) => ({\r\n        error: {\r\n          ...preState.error,\r\n          [fieldName]: errMsg,\r\n        },\r\n      }),\r\n      () => {\r\n        const errors = Object.values(this.state.error).filter((err) => err);\r\n        this.setState({\r\n          isValidForm: errors.length === 0,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState(\r\n      (preState) => ({\r\n        data: {\r\n          ...preState.data,\r\n          [name]: value,\r\n        },\r\n      }),\r\n      () => {\r\n        this.validateForm(name);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isValidForm = this.validateForm(null, 'submit');\r\n\r\n    if (!isValidForm) return;\r\n\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n\r\n    httpClient\r\n      .POST(`/auth/reset-password/${this.token}`, this.state.data)\r\n      .then((response) => {\r\n        notify.showInfo('Password Reset Successfull please login');\r\n        this.props.history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <h2>Reset Password</h2>\r\n        <p>Please choose your password wisely</p>\r\n        <form onSubmit={this.handleSubmit} className=\"form-group\" noValidate>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.onChange}\r\n          />\r\n          <p className=\"error\">\r\n            {this.state.error.password && this.state.error.password}\r\n          </p>\r\n\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={this.onChange}\r\n          />\r\n          <p className=\"error\">\r\n            {this.state.error.confirmPassword &&\r\n              this.state.error.confirmPassword}\r\n          </p>\r\n          <SubmitButton isSubmitting={this.state.isSubmitting}></SubmitButton>\r\n        </form>\r\n        <p>\r\n          back to <Link to=\"/\">login</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","export const addItem = (item, next) => {\r\n  let cart = [];\r\n  if (typeof window !== 'undefined') {\r\n    if (localStorage.getItem('cart')) {\r\n      cart = JSON.parse(localStorage.getItem('cart'));\r\n    }\r\n  }\r\n  cart.push({\r\n    ...item,\r\n    count: 1,\r\n  });\r\n  cart = Array.from(new Set(cart.map((p) => p._id))).map((id) => {\r\n    return cart.find((p) => p._id === id);\r\n  });\r\n\r\n  localStorage.setItem('cart', JSON.stringify(cart));\r\n  next();\r\n};\r\n\r\nexport const itemTotal = () => {\r\n  if (typeof window !== 'undefined') {\r\n    if (localStorage.getItem('cart')) {\r\n      return JSON.parse(localStorage.getItem('cart')).length;\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n  if (typeof window !== 'undefined') {\r\n    if (localStorage.getItem('cart')) {\r\n      return JSON.parse(localStorage.getItem('cart'));\r\n    }\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n  let cart = [];\r\n  if (typeof window !== 'undefined') {\r\n    if (localStorage.getItem('cart')) {\r\n      cart = JSON.parse(localStorage.getItem('cart'));\r\n    }\r\n\r\n    cart.map((product, index) => {\r\n      if (product._id === productId) {\r\n        cart[index].count = count;\r\n      }\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }\r\n};\r\n\r\nexport const removeItem = (productId) => {\r\n  let cart = [];\r\n  if (typeof window !== 'undefined') {\r\n    if (localStorage.getItem('cart')) {\r\n      cart = JSON.parse(localStorage.getItem('cart'));\r\n    }\r\n\r\n    cart.map((product, index) => {\r\n      if (product._id === productId) {\r\n        cart.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }\r\n  return cart;\r\n};\r\n\r\nexport const emptyCart = (next) => {\r\n  if (typeof window !== 'undefined') {\r\n    localStorage.removeItem('cart');\r\n    next();\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './HeaderComponent.css';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { itemTotal } from './../../Carts/CartHelper';\r\n\r\nconst logout = (history) => {\r\n  // localstorage clear\r\n  localStorage.clear();\r\n  history.push('/');\r\n  // navigate to Login page\r\n};\r\nconst HeaderComponent = (props) => {\r\n  const currentUser = JSON.parse(localStorage.getItem('user'));\r\n  // console.log('Props ==>', props);\r\n  // console.log('isloggedIn ==>', props.isLoggedIn);\r\n  let content = props.isLoggedIn ? (\r\n    <nav className='navbar navbar-expand-sm bg-dark navbar-dark fixed-top'>\r\n      <div className='topnav'>\r\n        <NavLink to='/home'>Home</NavLink>\r\n\r\n        <NavLink to='/dashboard'>Dashboard</NavLink>\r\n        <NavLink to='/cart'>\r\n          Cart{' '}\r\n          <sup>\r\n            <small className='cart-badge'>{itemTotal()}</small>\r\n          </sup>\r\n        </NavLink>\r\n        {/* <NavLink to='/settings'>Setting</NavLink> */}\r\n        {/* <NavLink to='/about'>About</NavLink> */}\r\n\r\n        <button\r\n          className='btn btn-danger logout'\r\n          onClick={() => logout(props.history)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <p className='user-info'>{currentUser.username}</p>\r\n      </div>\r\n    </nav>\r\n  ) : (\r\n    <nav className='navbar navbar-expand-sm bg-dark navbar-dark fixed-top'>\r\n      <div className='topnav'>\r\n        <NavLink to='/home'>Home</NavLink>\r\n\r\n        <NavLink to='/cart'>\r\n          Cart\r\n          <sup>\r\n            <small className='cart-badge'>{itemTotal()}</small>\r\n          </sup>\r\n        </NavLink>\r\n        <NavLink to='/'>Login</NavLink>\r\n        <NavLink to='/register'>Register</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n  // console.log('isloggedIn ==>', props.isLoggedIn);\r\n  return <div>{content}</div>;\r\n};\r\n\r\nexport const Header = withRouter(HeaderComponent);\r\n","import moment from 'moment';\r\n\r\nexport const formatDate = (date, format = 'YYYY/MM/DD') => {\r\n  if (!date) return;\r\n  return moment(date).format(format);\r\n};\r\n\r\nexport const formatTime = (date) => {\r\n  if (!date) return;\r\n  return moment(date).format('hh:mm a');\r\n};\r\n\r\nexport const relativeTime = (date) => {\r\n  if (!date) return;\r\n  return moment(date).startOf('minute').fromNow();\r\n};\r\n","import React from 'react';\r\nimport './LoaderComp.css';\r\n\r\nexport const Loader = (props) => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n","export const SET_ISLOADING = 'SET_ISLOADING';\r\nexport const SET_ISSUBMITTING = 'SET_ISSUBMITTING';\r\n\r\nexport const PRODUCTS_RECEIVED = 'PRODUCTS_RECEIVED';\r\nexport const PRODUCT_RECEIVED = 'PRODUCT_RECEIVED';\r\nexport const PRODUCT_REMOVED = 'PRODUCT_REMOVED';\r\n\r\nexport const REVIEW_ADDED = 'REVIEW_ADDED';\r\n\r\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\r\n","import { handleError } from './../../utils/ErrorHandler';\r\nimport { httpClient } from './../../utils/httpClient';\r\nimport { notify } from './../../utils/toaster';\r\nimport {\r\n  PRODUCTS_RECEIVED,\r\n  PRODUCT_RECEIVED,\r\n  PRODUCT_REMOVED,\r\n  REVIEW_ADDED,\r\n  SET_ISLOADING,\r\n  SET_ISSUBMITTING,\r\n  SET_PAGE_NUMBER,\r\n} from '../Constants/ProductConstant';\r\n\r\nexport const fetchProducts_ac = (params) => (dispatch) => {\r\n  console.log('at action file');\r\n  dispatch(loading(true));\r\n\r\n  httpClient\r\n    .GET('/product', true, params)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: PRODUCTS_RECEIVED,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      handleError(err);\r\n    })\r\n    .finally(() => {\r\n      dispatch(loading(false));\r\n    });\r\n};\r\n\r\n// export const removeProduct_ac = (id) => {\r\n//   return (dispatch) => {\r\n//     httpClient\r\n//       .DELETE(`/product/${id}`, true)\r\n//       .then((response) => {\r\n//         notify.showInfo('Product Removed');\r\n//         dispatch({\r\n//           type: PRODUCT_REMOVED,\r\n//           productId: id,\r\n//         });\r\n//       })\r\n//       .catch((err) => {\r\n//         handleError(err);\r\n//       });\r\n//   };\r\n// };\r\n\r\nexport const removeProduct_ac = (id) => (dispatch) => {\r\n  httpClient\r\n    .DELETE(`/product/${id}`, true)\r\n    .then((response) => {\r\n      notify.showInfo('Product Removed');\r\n      dispatch({\r\n        type: PRODUCT_REMOVED,\r\n        productId: id,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      handleError(err);\r\n    });\r\n};\r\n\r\nexport const changePageNumber_ac = (page) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_PAGE_NUMBER,\r\n    payload: page,\r\n  });\r\n};\r\n\r\nexport const fetchProduct_ac = (id) => (dispatch) => {\r\n  // dispatch(loading(true));\r\n  httpClient\r\n    .GET(`/product/${id}`, true)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: PRODUCT_RECEIVED,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      handleError(err);\r\n    });\r\n  // .finally(() => {\r\n  //   dispatch(loading(false));\r\n  // });\r\n};\r\n\r\nexport const addReview_ac = (productId, data) => (dispatch) => {\r\n  dispatch(submitting(true));\r\n\r\n  httpClient\r\n    .POST(`/product/add-review/${productId}`, data, true)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: REVIEW_ADDED,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      handleError(err);\r\n    })\r\n    .finally(() => {\r\n      dispatch(submitting(false));\r\n    });\r\n};\r\n\r\nconst loading = (isLoading) => ({\r\n  type: SET_ISLOADING,\r\n  payload: isLoading,\r\n});\r\n\r\nconst submitting = (isSubmitting) => ({\r\n  type: SET_ISSUBMITTING,\r\n  payload: isSubmitting,\r\n});\r\n// export const fetchProducts_ac = (params) => {\r\n//   return (dispatch) => {\r\n//     console.log('At action file');\r\n\r\n//     dispatch({\r\n//       type: SET_ISLOADING,\r\n//       payload: true,\r\n//     });\r\n\r\n//     setTimeout(() => {\r\n//       dispatch({\r\n//         type: SET_ISLOADING,\r\n//         payload: false,\r\n//       });\r\n//     }, 4000);\r\n//   };\r\n// };\r\n","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { formatDate } from '../../../utils/dateUtil';\r\nimport { Loader } from './../../common/Loader/LoaderComp';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changePageNumber_ac,\r\n  fetchProducts_ac,\r\n  removeProduct_ac,\r\n} from '../../../Redux/Actions/ProductAction';\r\n\r\nimport './ViewProductComponent.css';\r\n\r\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\r\n\r\nclass ViewProductsComponent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      products: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // console.log('Props at viewProduct ==>', this.props);\r\n\r\n    if (this.props.results) {\r\n      return this.setState({\r\n        products: this.props.results,\r\n      });\r\n    }\r\n\r\n    this.props.fetch({\r\n      pageNumber: this.props.pageNumber,\r\n      pageSize: this.props.pageSize,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log('component is updated', this.props);\r\n  }\r\n  editProduct = (id) => {\r\n    this.props.history.push(`/edit_product/${id}`);\r\n  };\r\n\r\n  removeProduct = (id) => {\r\n    // ask for confirmation\r\n    // aweosme react components>> modal (overlay)\r\n    const confirmation = window.confirm('Are you sure to remove?');\r\n    if (confirmation) {\r\n      // proceed with remove\r\n      this.props.remove(id);\r\n    }\r\n  };\r\n\r\n  changePage = (evt) => {\r\n    let { pageNumber } = this.props;\r\n    if (evt === 'next') {\r\n      pageNumber++;\r\n    }\r\n    if (evt === 'previous') {\r\n      pageNumber--;\r\n    }\r\n    this.props.change_page(pageNumber);\r\n    this.props.fetch({\r\n      pageNumber: pageNumber,\r\n      pageSize: this.props.pageSize,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // let content = this.state.isLoading ? (\r\n    let content = this.props.isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>S.N</th>\r\n            <th>Name</th>\r\n            <th>Category</th>\r\n            <th>Price</th>\r\n            <th>Color</th>\r\n            <th>Created Date</th>\r\n            <th>Tags</th>\r\n            <th>Images</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.products.length ? (\r\n            this.props.products.map((product, index) => (\r\n              <tr key={product._id}>\r\n                <td>{index + 1}</td>\r\n                <td>\r\n                  <Link to={`/product_details/${product._id}`}>\r\n                    {product.name}\r\n                  </Link>{' '}\r\n                </td>\r\n                <td>{product.category}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.color}</td>\r\n                <td>{formatDate(product.createdAt)}</td>\r\n                <td>{product.tags ? product.tags.join(',') : 'N/A'}</td>\r\n                <td>\r\n                  <img\r\n                    src={`${IMG_URL}/${product.images[0]}`}\r\n                    alt='product_img.png'\r\n                    width='100px'\r\n                    height='100px'\r\n                  ></img>\r\n                </td>\r\n                <td>\r\n                  <i\r\n                    style={{ color: 'blue', cursor: 'pointer' }}\r\n                    className='fa fa-pencil'\r\n                    title='Edit Product'\r\n                    onClick={() => this.editProduct(product._id)}\r\n                  ></i>{' '}\r\n                  |\r\n                  <i\r\n                    title='Remove Product'\r\n                    style={{ color: 'red', cursor: 'pointer' }}\r\n                    className='fa fa-trash'\r\n                    onClick={() => this.removeProduct(product._id)}\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td style={{ textAlign: 'center' }} colSpan='5'>\r\n                No any products added yet{' '}\r\n              </td>\r\n            </tr>\r\n          )}\r\n          {this.props.pageNumber !== 1 && (\r\n            <button\r\n              onClick={() => this.changePage('previous')}\r\n              className='btn btn-success'\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          &nbsp;\r\n          <button\r\n            onClick={() => this.changePage('next')}\r\n            className='btn btn-success'\r\n          >\r\n            Next\r\n          </button>\r\n        </tbody>\r\n      </table>\r\n    );\r\n    return (\r\n      <>\r\n        <div className='view_margin'>\r\n          <div className='form-control bg-color'>\r\n            <h2>View Products</h2>\r\n            {this.props.results && (\r\n              <button\r\n                className='btn btn-success'\r\n                onClick={() => this.props.resetSearch()}\r\n              >\r\n                Search Again\r\n              </button>\r\n            )}\r\n\r\n            {content}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (rootStore) => ({\r\n  isLoading: rootStore.product.isLoading,\r\n  products: rootStore.product.products,\r\n  pageNumber: rootStore.product.pageNumber,\r\n  pageSize: rootStore.product.pageSize,\r\n});\r\n\r\n// const mapDispatchToProps = {\r\n//   fetch: fetchProducts_ac,\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetch: (params) => dispatch(fetchProducts_ac(params)),\r\n  remove: (id) => dispatch(removeProduct_ac(id)),\r\n  change_page: (page) => dispatch(changePageNumber_ac(page)),\r\n});\r\n\r\nexport const ViewProducts = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewProductsComponent);\r\n","import './Product.css';\r\nimport { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { addItem, updateItem, removeItem } from './../../Carts/CartHelper';\r\n\r\nconst Product = ({\r\n  product,\r\n  imageUrl,\r\n  name,\r\n  price,\r\n  stockLeft,\r\n  description,\r\n  productId,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = (f) => f, // default value of function\r\n  run = undefined, // default value of undefined\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const addToCart = () => {\r\n    addItem(product, () => {\r\n      setRedirect(true);\r\n    });\r\n  };\r\n\r\n  const shouldRedirect = (redirect) => {\r\n    if (redirect) {\r\n      return <Redirect to='/cart' />;\r\n    }\r\n  };\r\n\r\n  const handleChange = (productId) => (e) => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(e.target.value < 1 ? 1 : e.target.value);\r\n    if (e.target.value >= 1) {\r\n      updateItem(productId, e.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = (cartUpdate) => {\r\n    // console.log('count=>', stockLeft);\r\n    return stockLeft > 0\r\n      ? cartUpdate && (\r\n          <div>\r\n            <div className='input-group mb-3'>\r\n              <div className='input-group-prepend'>\r\n                <span className='input-group-text'>Total Qty</span>\r\n              </div>\r\n              <input\r\n                type='number'\r\n                className='form-control'\r\n                value={count}\r\n                onChange={handleChange(productId)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      : null;\r\n  };\r\n\r\n  return (\r\n    <div className='product'>\r\n      {shouldRedirect(redirect)}\r\n      <img src={imageUrl} alt={name} />\r\n      <div className='product__info'>\r\n        <p className='info__name'>{name}</p>\r\n        <p className='info__description'>{description}...</p>\r\n        <p className='info__name'>\r\n          Stock Left : {stockLeft > 0 ? stockLeft : 'Out of Stock'}\r\n        </p>\r\n\r\n        <p className='info__price'>Rs {price}</p>\r\n        <Link to={`/product_details/${productId}`} className='info__button'>\r\n          View\r\n        </Link>\r\n\r\n        {showAddToCartButton ? (\r\n          stockLeft > 0 ? (\r\n            <button onClick={addToCart} className='info__button'>\r\n              Add to Cart\r\n            </button>\r\n          ) : (\r\n            <button className='info__button__remove'>Out Of Stock</button>\r\n          )\r\n        ) : (\r\n          ''\r\n        )}\r\n        {showRemoveProductButton ? (\r\n          <button\r\n            onClick={() => {\r\n              removeItem(productId);\r\n              setRun(!run);\r\n            }}\r\n            className='info__button__remove'\r\n          >\r\n            Remove Product\r\n          </button>\r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { Component } from 'react';\r\nimport { handleError } from '../../../utils/ErrorHandler';\r\nimport { httpClient } from '../../../utils/httpClient';\r\nimport { notify } from '../../../utils/toaster';\r\nimport Product from '../Product/Product';\r\n\r\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\r\n\r\nexport class ProductView extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      products: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.results) {\r\n      return this.setState({\r\n        products: this.props.results,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    httpClient\r\n      .GET('/product', true)\r\n      .then((response) => {\r\n        this.setState({\r\n          products: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  editProduct = (id) => {\r\n    this.props.history.push(`/edit_product/${id}`);\r\n  };\r\n\r\n  removeProduct = (id, idx) => {\r\n    // ask for confirmation\r\n    // aweosme react components>> modal (overlay)\r\n    const confirmation = window.confirm('Are you sure to remove?');\r\n    if (confirmation) {\r\n      // proceed with remove\r\n      httpClient\r\n        .DELETE(`/product/${id}`, true)\r\n        .then((response) => {\r\n          notify.showInfo('Product Removed');\r\n          const { products } = this.state;\r\n          products.splice(idx, 1);\r\n\r\n          this.setState({\r\n            products,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          handleError(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='homescreen'>\r\n        <h2 className='homescreen__title'>Products</h2>\r\n        {this.props.results && (\r\n          <button\r\n            className='btn btn-success'\r\n            onClick={() => this.props.resetSearch()}\r\n          >\r\n            Search Again\r\n          </button>\r\n        )}\r\n\r\n        <div className='homescreen__products'>\r\n          {this.state.loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            <>\r\n              {(this.state.products || []).map((product) => (\r\n                <Product\r\n                  key={product._id}\r\n                  product={product}\r\n                  imageUrl={`${IMG_URL}/${product.images[0]}`}\r\n                  productId={product._id}\r\n                  name={product.name}\r\n                  price={product.price}\r\n                  stockLeft={product.quantity}\r\n                  description={product.description}\r\n                />\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { handleError } from '../../utils/ErrorHandler';\r\nimport { httpClient } from '../../utils/httpClient';\r\nimport { notify } from '../../utils/toaster';\r\nimport { ViewProducts } from '../Products/ViewProduct/ViewProductComponent';\r\n\r\nimport Product from '../common/Product/Product';\r\nimport { SubmitButton } from '../common/SubmitButton/SubmitButtonComponent';\r\nimport { ProductView } from '../common/ProductView/ProductViewComp';\r\n\r\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\r\n\r\nconst defaultForm = {\r\n  name: '',\r\n  category: '',\r\n  tags: '',\r\n  brand: '',\r\n  minPrice: '',\r\n  maxPrice: '',\r\n};\r\n\r\nexport class HomeComp extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n      error: {\r\n        ...defaultForm,\r\n      },\r\n      isLoading: false,\r\n      isSubmitting: false,\r\n      categories: [],\r\n      allProducts: [],\r\n      names: [],\r\n      searchResults: [],\r\n      products: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.results) {\r\n      return this.setState({\r\n        products: this.props.results,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    httpClient\r\n      .GET('/product/search', true)\r\n      .then((response) => {\r\n        this.setState({\r\n          products: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n\r\n    httpClient\r\n      .POST(`/product/search`, {})\r\n      .then((response) => {\r\n        let categories = [];\r\n        response.data.forEach((item, index) => {\r\n          if (!categories.includes(item.category)) {\r\n            categories.push(item.category);\r\n          }\r\n        });\r\n        this.setState({\r\n          categories: categories,\r\n          allProducts: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let { type, checked, name, value } = e.target;\r\n    if (name === 'category') {\r\n      this.prepareNames(value);\r\n    }\r\n    this.setState((preState) => ({\r\n      data: {\r\n        ...preState.data,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  prepareNames = (selectedCategory) => {\r\n    const names = this.state.allProducts.filter(\r\n      (item) => item.category === selectedCategory\r\n    );\r\n    this.setState({\r\n      names,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { data } = this.state;\r\n    // console.log('data=>', data);\r\n    httpClient\r\n      .POST('/product/search', data)\r\n      .then((response) => {\r\n        // console.log('response', response.data.length);\r\n        if (!response.data.length) {\r\n          return notify.showInfo('No any products matched your search query');\r\n        }\r\n        //  TODO show in proper UI\r\n        this.setState({\r\n          searchResults: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      });\r\n  };\r\n\r\n  resetSearch = () => {\r\n    this.setState({\r\n      searchResults: [],\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='homescreen'>\r\n        <div className='homescreen__products'>\r\n          {this.state.loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            <>\r\n              {/* {console.log('state', this.state)} */}\r\n              {this.state.searchResults.length > 0 ? (\r\n                <ProductView\r\n                  {...this.props}\r\n                  resetSearch={this.resetSearch}\r\n                  results={this.state.searchResults}\r\n                ></ProductView>\r\n              ) : (\r\n                <>\r\n                  <form\r\n                    onSubmit={this.handleSubmit}\r\n                    className='form-group mb-2'\r\n                    noValidate\r\n                  >\r\n                    {/* <label>Brand</label>\r\n                    <input\r\n                      type='text'\r\n                      name='brand'\r\n                      placeholder='Brand'\r\n                      className='form-control'\r\n                      onChange={this.handleChange}\r\n                    ></input> */}\r\n                    <label>Search</label>\r\n                    <input\r\n                      type='text'\r\n                      name='tags'\r\n                      placeholder='Tags'\r\n                      className='form-control'\r\n                      onChange={this.handleChange}\r\n                    ></input>\r\n                    <br />\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                        <h6>Filter By Category</h6>\r\n                        <div className='row'>\r\n                          <div className='col-md-6'>\r\n                            <label>Category</label>\r\n                            <select\r\n                              name='category'\r\n                              className='form-control'\r\n                              value={this.state.data.category}\r\n                              onChange={this.handleChange}\r\n                            >\r\n                              <option value=''>Select Category</option>\r\n                              {this.state.categories.map((cat, index) => (\r\n                                <option key={index} value={cat}>\r\n                                  {cat}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                          <div className='col-md-6'>\r\n                            {this.state.names.length > 0 && (\r\n                              <>\r\n                                <label>Name</label>\r\n                                <select\r\n                                  name='name'\r\n                                  value={this.state.data.name}\r\n                                  className='form-control'\r\n                                  onChange={this.handleChange}\r\n                                >\r\n                                  <option>Select Name</option>\r\n                                  {this.state.names.map((name, index) => (\r\n                                    <option key={name._id} value={name.name}>\r\n                                      {name.name}\r\n                                    </option>\r\n                                  ))}\r\n                                </select>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                        <h6>Filter By Price</h6>\r\n                        <div className='row'>\r\n                          <div className='col-md-6'>\r\n                            <label>Min Price</label>\r\n                            <input\r\n                              type='number'\r\n                              name='mnPrice'\r\n                              className='form-control'\r\n                              onChange={this.handleChange}\r\n                            ></input>\r\n                          </div>\r\n                          <div className='col-md-6'>\r\n                            <label>Max Price</label>\r\n                            <input\r\n                              type='number'\r\n                              name='maxPrice'\r\n                              className='form-control'\r\n                              onChange={this.handleChange}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <SubmitButton\r\n                      isSubmitting={this.state.isSubmitting}\r\n                    ></SubmitButton>\r\n                  </form>\r\n                  {(this.state.products || []).map((product) => (\r\n                    <Product\r\n                      product={product}\r\n                      key={product._id}\r\n                      imageUrl={`${IMG_URL}/${product.images[0]}`}\r\n                      productId={product._id}\r\n                      name={product.name}\r\n                      stockLeft={product.quantity}\r\n                      price={product.price}\r\n                      description={product.description}\r\n                    />\r\n                  ))}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './SidebarComponent.css';\r\nexport const Sidebar = (props) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  // console.log('props in sidebar', user);\r\n\r\n  let content =\r\n    props.isLoggedIn && user.role === 1 ? (\r\n      <div class='sidenav'>\r\n        <NavLink activeClassName='selected' to='/add_product'>\r\n          Add Product\r\n        </NavLink>\r\n        <NavLink activeClassName='selected' to='/view_products'>\r\n          View Product\r\n        </NavLink>\r\n        <NavLink activeClassName='selected' to='/search_product'>\r\n          Search Product\r\n        </NavLink>\r\n        <NavLink isLoggedIn={true} activeClassName='selected' to='/orders'>\r\n          View Orders\r\n        </NavLink>\r\n        {/* <NavLink activeClassName='selected' to='/notifications'>\r\n          Notification\r\n        </NavLink> */}\r\n        <NavLink activeClassName='selected' to='/message'>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n    ) : props.isLoggedIn ? (\r\n      <div class='sidenav'>\r\n        {user.role === 3 ? (\r\n          <>\r\n            <NavLink activeClassName='selected' to='/add_product'>\r\n              Add Product\r\n            </NavLink>\r\n            <NavLink activeClassName='selected' to='/view_products'>\r\n              View Product\r\n            </NavLink>\r\n            <NavLink activeClassName='selected' to='/search_product'>\r\n              Search Product\r\n            </NavLink>\r\n\r\n            <NavLink activeClassName='selected' to='/message'>\r\n              Messages\r\n            </NavLink>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <NavLink activeClassName='selected' to='/search_product'>\r\n              Search Product\r\n            </NavLink>\r\n\r\n            <NavLink activeClassName='selected' to='/message'>\r\n              Messages\r\n            </NavLink>\r\n          </>\r\n        )}\r\n      </div>\r\n    ) : null;\r\n  return content;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { SubmitButton } from '../../common/SubmitButton/SubmitButtonComponent';\r\nimport { formatDate } from '../../../utils/dateUtil';\r\n\r\nimport './ProductFormComponent.css';\r\n\r\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\r\n\r\nconst defaultForm = {\r\n  name: '',\r\n  description: '',\r\n  brand: '',\r\n  color: '',\r\n  category: '',\r\n  price: '',\r\n  quantity: '',\r\n  status: '',\r\n  tags: '',\r\n  isReturnEligible: false,\r\n  warrentyStatus: false,\r\n  warrentyPeroid: '',\r\n  purchasedDate: '',\r\n  manuDate: '',\r\n  discountedItem: false,\r\n  discountType: '',\r\n  discountValue: '',\r\n  expiryDate: '',\r\n  salesDate: '',\r\n};\r\n\r\nconst validationFields = {\r\n  category: '',\r\n  name: '',\r\n};\r\n\r\nexport class ProductForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: { ...defaultForm },\r\n      error: { ...validationFields },\r\n      filesToUpload: [],\r\n      selectedFiles: [],\r\n      filesToRemove: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log('this.props >>', this.props);\r\n    const { productData } = this.props;\r\n    if (productData) {\r\n      // edit\r\n      this.setState({\r\n        data: {\r\n          ...defaultForm,\r\n          ...productData,\r\n          discountedItem:\r\n            productData.discount && productData.discount.discountedItem\r\n              ? productData.discount.discountedItem\r\n              : false,\r\n\r\n          discountType:\r\n            productData.discount && productData.discount.discountType\r\n              ? productData.discount.discountType\r\n              : '',\r\n\r\n          discountValue:\r\n            productData.discount && productData.discount.discountValue\r\n              ? productData.discount.discountValue\r\n              : '',\r\n\r\n          purchasedDate: productData.purchasedDate\r\n            ? formatDate(productData.purchasedDate, 'YYYY-MM-DD')\r\n            : '',\r\n\r\n          salesDate: productData.salesDate\r\n            ? formatDate(productData.salesDate, 'YYYY-MM-DD')\r\n            : '',\r\n          manuDate: productData.manuDate\r\n            ? formatDate(productData.manuDate, 'YYYY-MM-DD')\r\n            : '',\r\n          expiryDate: productData.expiryDate\r\n            ? formatDate(productData.expiryDate, 'YYYY-MM-DD')\r\n            : '',\r\n        },\r\n        // to show preview\r\n        selectedFiles: (productData.images || []).map((img) => ({\r\n          img: `${IMG_URL}/${img}`,\r\n          type: 'old',\r\n        })),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    console.log('productform e.target==> ', e.target);\r\n    console.log('porductform this.state==>', this.state);\r\n    let { type, checked, name, value, files } = e.target;\r\n\r\n    if (type === 'file') {\r\n      console.log('files =>', files);\r\n      const { filesToUpload, selectedFiles } = this.state;\r\n      var temp_id = Date.now();\r\n\r\n      filesToUpload.push({\r\n        img: files[0],\r\n        temp_id: temp_id,\r\n      });\r\n\r\n      selectedFiles.push({\r\n        img: URL.createObjectURL(files[0]),\r\n        type: 'new',\r\n        temp_id: temp_id,\r\n      });\r\n\r\n      return this.setState({\r\n        filesToUpload,\r\n        selectedFiles,\r\n      });\r\n    }\r\n\r\n    if (type === 'checkbox') {\r\n      value = checked;\r\n    }\r\n\r\n    this.setState(\r\n      (preState) => ({\r\n        data: {\r\n          ...preState.data,\r\n          [name]: value,\r\n        },\r\n      }),\r\n      () => {\r\n        // form validation here\r\n      }\r\n    );\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { filesToUpload } = this.state;\r\n    const filesOnly = filesToUpload.map((file) => file.img);\r\n    this.props.submitCallback(this.state.data, filesOnly);\r\n    if (this.state.filesToRemove.length > 0) {\r\n      this.props.removeExistingImage(this.state.filesToRemove);\r\n    }\r\n  };\r\n\r\n  removeSelectedImage = (file, index) => {\r\n    const { selectedFiles, filesToUpload, filesToRemove } = this.state;\r\n\r\n    if (this.props.isEditMode) {\r\n      // create API to remove existing image\r\n      // for existing only\r\n      console.log('file =>', file);\r\n      if (file.type === 'old') {\r\n        filesToRemove.push(file.img);\r\n      }\r\n    }\r\n\r\n    filesToUpload.forEach((item, index) => {\r\n      if (item.temp_id === file.temp_id) {\r\n        filesToUpload.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    selectedFiles.splice(index, 1);\r\n\r\n    this.setState({\r\n      selectedFiles,\r\n      filesToUpload,\r\n      filesToRemove,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='col-md-8 form_margin'>\r\n          <div className='container form-control bg-color'>\r\n            <h2>{this.props.isEditMode ? 'Update' : 'Add'} Product</h2>\r\n            <p>Please add necessary details</p>\r\n            <form\r\n              onSubmit={this.onSubmit}\r\n              className='form-group content'\r\n              noValidate\r\n            >\r\n              <label>Name</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                value={this.state.data.name}\r\n                name='name'\r\n                placeholder='Name'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Description</label>\r\n              <textarea\r\n                rows={6}\r\n                className='form-control'\r\n                value={this.state.data.description}\r\n                name='description'\r\n                placeholder='Description here'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Category</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                value={this.state.data.category}\r\n                name='category'\r\n                placeholder='Category'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Brand</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                value={this.state.data.brand}\r\n                name='brand'\r\n                placeholder='Brand'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Price</label>\r\n              <input\r\n                type='number'\r\n                className='form-control'\r\n                value={this.state.data.price}\r\n                name='price'\r\n                placeholder='Price'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Color</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                value={this.state.data.color}\r\n                name='color'\r\n                placeholder='Color'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Quantity</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                value={this.state.data.quantity}\r\n                name='quantity'\r\n                placeholder='Quantity'\r\n                onChange={this.handleChange}\r\n              />\r\n              <input\r\n                type='checkbox'\r\n                name='isReturnEligible'\r\n                checked={this.state.data.isReturnEligible}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label> &nbsp;Is Return Eligible</label>\r\n              <br />\r\n              <label>Tags</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                value={this.state.data.tags}\r\n                name='tags'\r\n                placeholder='Tags'\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.props.isEditMode && (\r\n                <>\r\n                  <label>Status</label>\r\n                  <select\r\n                    className='form-control'\r\n                    value={this.state.data.status}\r\n                    name='status'\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=''>Select Status</option>\r\n                    <option value='available'>Available</option>\r\n                    <option value='booked'>Booked</option>\r\n                    <option value='out_of_stock'>Out Of Stock</option>\r\n                  </select>\r\n                </>\r\n              )}\r\n\r\n              <input\r\n                type='checkbox'\r\n                checked={this.state.data.warrentyStatus}\r\n                name='warrentyStatus'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label> &nbsp;Warrenty Status</label>\r\n              <br />\r\n              {this.state.data.warrentyStatus && (\r\n                <>\r\n                  <label>Warrenty Peroid</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    value={this.state.data.warrentyPeroid}\r\n                    name='warrentyPeroid'\r\n                    placeholder='Warrenty Peroid'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              <input\r\n                type='checkbox'\r\n                checked={this.state.data.discountedItem}\r\n                name='discountedItem'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label> &nbsp;Discounted Item</label>\r\n              {this.state.data.discountedItem && (\r\n                <>\r\n                  <br />\r\n                  <label>Discount Type</label>\r\n                  <select\r\n                    className='form-control'\r\n                    value={this.state.data.discountType}\r\n                    name='discountType'\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option disabled value=''>\r\n                      (Select Type)\r\n                    </option>\r\n                    <option value='percentage'>Percentage</option>\r\n                    <option value='qunantity'>Quantity</option>\r\n                    <option value='value'>Value</option>\r\n                  </select>\r\n                  <label>Discount Value</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    value={this.state.data.discountValue}\r\n                    name='discountValue'\r\n                    placeholder='Discount Value'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </>\r\n              )}\r\n              <br />\r\n              <label>Purchased Date</label>\r\n              <input\r\n                type='date'\r\n                className='form-control'\r\n                value={this.state.data.purchasedDate}\r\n                name='purchasedDate'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Sales Date</label>\r\n              <input\r\n                type='date'\r\n                className='form-control'\r\n                value={this.state.data.salesDate}\r\n                name='salesDate'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Manu Date</label>\r\n              <input\r\n                type='date'\r\n                className='form-control'\r\n                value={this.state.data.manuDate}\r\n                name='manuDate'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Expiry Date</label>\r\n              <input\r\n                type='date'\r\n                className='form-control'\r\n                value={this.state.data.expiryDate}\r\n                name='expiryDate'\r\n                onChange={this.handleChange}\r\n              />\r\n              <label>Select Image</label>\r\n              <input\r\n                type='file'\r\n                onChange={this.handleChange}\r\n                className='form-control'\r\n              ></input>\r\n              {this.state.selectedFiles.length > 0 &&\r\n                this.state.selectedFiles.map((file, index) => (\r\n                  <React.Fragment key={index}>\r\n                    <br />\r\n                    <img src={file.img} alt='files.png' width='100px'></img>\r\n                    <i\r\n                      title='Remove Selected Image'\r\n                      style={{\r\n                        marginLeft: '10px',\r\n                        color: 'red',\r\n                        cursor: 'pointer',\r\n                      }}\r\n                      className='fa fa-trash'\r\n                      onClick={() => this.removeSelectedImage(file, index)}\r\n                    ></i>\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))}\r\n              <hr />\r\n              <SubmitButton\r\n                isSubmitting={this.props.isSubmitting}\r\n              ></SubmitButton>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ProductForm } from './../ProductForm/ProductFormComponent';\r\nimport { httpClient } from './../../../utils/httpClient';\r\nimport { handleError } from './../../../utils/ErrorHandler';\r\n\r\nimport { notify } from './../../../utils/toaster';\r\n\r\nexport class AddProduct extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isSubmitting: false,\r\n    };\r\n  }\r\n\r\n  add = (data, files) => {\r\n    // console.log('function in add product component', data);\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n\r\n    const requestData = data;\r\n    if (!requestData.discountedItem) {\r\n      delete requestData.discountType;\r\n      delete requestData.discountValue;\r\n    }\r\n    if (!requestData.warrentyStatus) {\r\n      delete requestData.warrentyPeroid;\r\n    }\r\n\r\n    // API call\r\n    httpClient\r\n      .UPLOAD('POST', 'product', requestData, files)\r\n      // .POST('/product', data, true)\r\n      .then((response) => {\r\n        notify.showSuccess('Product Added Successfully!');\r\n        this.props.history.push('/view_products');\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ProductForm\r\n        isSubmitting={this.state.isSubmitting}\r\n        isEditMode={false}\r\n        submitCallback={this.add}\r\n      ></ProductForm>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { handleError } from '../../../utils/ErrorHandler';\r\nimport { httpClient } from '../../../utils/httpClient';\r\nimport { notify } from '../../../utils/toaster';\r\nimport { ProductForm } from './../ProductForm/ProductFormComponent';\r\nimport { Loader } from './../../common/Loader/LoaderComp';\r\n\r\nexport class EditProduct extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      product: {},\r\n      isSubmitting: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.productId = this.props.match.params['id'];\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    httpClient\r\n      .GET(`/product/${this.productId}`, true)\r\n      .then((response) => {\r\n        this.setState({\r\n          product: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  edit = (data, files) => {\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n\r\n    httpClient\r\n      // .PUT(`/product/${this.productId}`, data, true)\r\n      .UPLOAD('PUT', `product/${this.productId}`, data, files)\r\n      .then((response) => {\r\n        notify.showInfo('Product Updated');\r\n        this.props.history.push('/view_products');\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n        handleError(err);\r\n      });\r\n  };\r\n\r\n  removeExistingImage = (files) => {\r\n    httpClient\r\n      .PUT(`/product/remove_image/${this.productId}`, { files }, true)\r\n      // .UPLOAD('PUT', `product/remove_image/${this.productId}`, { files }, true)\r\n      .then((response) => {\r\n        console.log('removed');\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let content = this.state.isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <ProductForm\r\n        isEditMode={true}\r\n        submitCallback={this.edit}\r\n        isSubmitting={this.state.isSubmitting}\r\n        productData={this.state.product}\r\n        removeExistingImage={this.removeExistingImage}\r\n      ></ProductForm>\r\n    );\r\n    return content;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { relativeTime } from '../../../../utils/dateUtil';\r\n\r\nimport './ProductDetailsComp.css';\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\r\n\r\nexport default class ProductDetails extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Product Details Comp ==>', this.props);\r\n  }\r\n\r\n  getImages = () => {\r\n    return (this.props.product.images || []).map((img, index) => ({\r\n      original: `${IMG_URL}/${img}`,\r\n      // thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n      thumbnail: `${IMG_URL}/${img}`,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <ImageGallery items={this.getImages()} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3>{product.name}</h3>\r\n            <hr />\r\n            <h5>Description:</h5>\r\n            <p>{product.description}</p>\r\n            <p>RS {product.price}</p>\r\n            <p>Categrory : {product.category}</p>\r\n            <p>Color : {product.color}</p>\r\n            <div className=\"col-md-8 review_box\">\r\n              {product.reviews && product.reviews.length > 0 && (\r\n                <>\r\n                  <p>Reviews</p>\r\n                  <hr />\r\n                  {product.reviews\r\n                    .filter((result) => result)\r\n                    .map((result, index) => (\r\n                      <div key={index}>\r\n                        {/* <p>{result.point}</p> */}\r\n                        <div>\r\n                          <StarRatings\r\n                            starDimension=\"20px\"\r\n                            rating={result.point}\r\n                            starEmptyColor=\"white\"\r\n                            starHoverColor=\"green\"\r\n                            starRatedColor=\"green\"\r\n                            disabled={true}\r\n                            numberOfStars={5}\r\n                          />\r\n                        </div>\r\n                        <br />\r\n                        <p>Message : {result.message}</p>\r\n                        <p>\r\n                          By : <strong>{result.user.username}</strong>\r\n                        </p>\r\n                        <small>{relativeTime(result.createdAt)}</small>\r\n                        <hr />\r\n                      </div>\r\n                    ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { SubmitButton } from './../../../common/SubmitButton/SubmitButtonComponent';\r\n\r\nconst defaultForm = {\r\n  reviewPoint: 1,\r\n  reviewMessage: '',\r\n};\r\n\r\nexport default class ReviewForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n    };\r\n  }\r\n\r\n  changeRating = (newRating, name) => {\r\n    this.setState((preState) => ({\r\n      data: {\r\n        ...preState.data,\r\n        [name]: newRating,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((preState) => ({\r\n      data: {\r\n        ...preState.data,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addReview(this.props.productId, this.state.data);\r\n    this.setState({\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"col-md-4\">\r\n          <h3>Add Reviews</h3>\r\n          <form onSubmit={this.handleSubmit} className=\"form-group\" noValidate>\r\n            <label>Points: </label>\r\n            {/* <input\r\n              type=\"number\"\r\n              value={this.state.data.reviewPoint}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n              name=\"reviewPoint\"\r\n            ></input> */}\r\n            <div>\r\n              <StarRatings\r\n                starDimension=\"25px\"\r\n                rating={this.state.data.reviewPoint}\r\n                starEmptyColor=\"white\"\r\n                starHoverColor=\"green\"\r\n                starRatedColor=\"green\"\r\n                changeRating={this.changeRating}\r\n                numberOfStars={5}\r\n                name=\"reviewPoint\"\r\n              />\r\n            </div>\r\n            <br />\r\n            <label>Message: </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.data.reviewMessage}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n              name=\"reviewMessage\"\r\n              placeholder=\"Review Here\"\r\n            ></input>\r\n            <hr />\r\n            <SubmitButton isSubmitting={this.props.isSubmitting}></SubmitButton>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addReview_ac,\r\n  fetchProduct_ac,\r\n} from '../../../Redux/Actions/ProductAction';\r\nimport ProductDetails from './ProductDetails/ProductDetailsComp';\r\nimport ReviewForm from './ReviewForm/ReviewFormComp';\r\n\r\nclass ProductDetailsLanding extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.productId = this.props.match.params['id'];\r\n    this.props.fetchProduct_ac(this.productId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ProductDetails product={this.props.product}></ProductDetails>\r\n        <ReviewForm\r\n          isSubmitting={this.props.isSubmitting}\r\n          productId={this.productId}\r\n          addReview={this.props.add_review}\r\n        ></ReviewForm>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (rootStore) => ({\r\n  product: rootStore.product.product,\r\n  isSubmitting: rootStore.product.isSubmitting,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchProduct_ac: (id) => dispatch(fetchProduct_ac(id)),\r\n  add_review: (productId, reviewData) =>\r\n    dispatch(addReview_ac(productId, reviewData)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductDetailsLanding);\r\n","import React, { Component } from 'react';\r\n// import { ViewProducts } from '../ViewProduct/ViewProductComponent';\r\nimport { ProductView } from './../../common/ProductView/ProductViewComp';\r\nimport { handleError } from './../../../utils/ErrorHandler';\r\nimport { httpClient } from './../../../utils/httpClient';\r\nimport { notify } from './../../../utils/toaster';\r\nimport { SubmitButton } from './../../common/SubmitButton/SubmitButtonComponent';\r\n\r\nimport './SearchProductComp.css';\r\n\r\nconst defaultForm = {\r\n  name: '',\r\n  category: '',\r\n  brand: '',\r\n  minPrice: '',\r\n  maxPrice: '',\r\n  tags: '',\r\n  fromDate: '',\r\n  toDate: '',\r\n  multipleDateRange: false,\r\n};\r\n\r\nexport class SearchProduct extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n      error: {\r\n        ...defaultForm,\r\n      },\r\n      isSubmitting: false,\r\n      categories: [],\r\n      allProducts: [],\r\n      names: [],\r\n      searchResults: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    httpClient\r\n      .POST(`/product/search`, {})\r\n      .then((response) => {\r\n        let categories = [];\r\n        response.data.forEach((item, index) => {\r\n          if (!categories.includes(item.category)) {\r\n            categories.push(item.category);\r\n          }\r\n        });\r\n        this.setState({\r\n          categories: categories,\r\n          allProducts: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let { type, checked, name, value } = e.target;\r\n    if (name === 'category') {\r\n      this.prepareNames(value);\r\n    }\r\n    if (type === 'checkbox') {\r\n      value = checked;\r\n    }\r\n    this.setState((preState) => ({\r\n      data: {\r\n        ...preState.data,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  prepareNames = (selectedCategory) => {\r\n    const names = this.state.allProducts.filter(\r\n      (item) => item.category === selectedCategory\r\n    );\r\n    this.setState({\r\n      names,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { data } = this.state;\r\n    if (!data.multipleDateRange) {\r\n      data.toDate = data.fromDate;\r\n    }\r\n    httpClient\r\n      .POST('/product/search', data)\r\n      .then((response) => {\r\n        if (!response.data.length) {\r\n          return notify.showInfo('No any products matched your search query');\r\n        }\r\n        //  TODO show in proper UI\r\n        this.setState({\r\n          searchResults: response.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        handleError(err);\r\n      });\r\n  };\r\n\r\n  resetSearch = () => {\r\n    this.setState({\r\n      searchResults: [],\r\n      data: {\r\n        ...defaultForm,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let content =\r\n      this.state.searchResults.length > 0 ? (\r\n        <ProductView\r\n          {...this.props}\r\n          resetSearch={this.resetSearch}\r\n          results={this.state.searchResults}\r\n        ></ProductView>\r\n      ) : (\r\n        <>\r\n          <div className='col-md-6 form_margin'>\r\n            <div className='form-control  bg-color'>\r\n              <h2>Search Product</h2>\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className='form-group content'\r\n                noValidate\r\n              >\r\n                <label>Category</label>\r\n                <select\r\n                  name='category'\r\n                  className='form-control'\r\n                  value={this.state.data.category}\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option value=''>(Select Category)</option>\r\n                  {this.state.categories.map((cat, index) => (\r\n                    <option key={index} value={cat}>\r\n                      {cat}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {this.state.names.length > 0 && (\r\n                  <>\r\n                    <label>Name</label>\r\n                    <select\r\n                      name='name'\r\n                      value={this.state.data.name}\r\n                      className='form-control'\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      <option>(Select Name)</option>\r\n                      {this.state.names.map((name, index) => (\r\n                        <option key={name._id} value={name.name}>\r\n                          {name.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </>\r\n                )}\r\n\r\n                <label>Brand</label>\r\n                <input\r\n                  type='text'\r\n                  name='brand'\r\n                  placeholder='Brand'\r\n                  className='form-control'\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n                <label>Min Price</label>\r\n                <input\r\n                  type='number'\r\n                  name='minPrice'\r\n                  className='form-control'\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n                <label>Max Price</label>\r\n                <input\r\n                  type='number'\r\n                  name='maxPrice'\r\n                  className='form-control'\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n                <label>Tags</label>\r\n                <input\r\n                  type='text'\r\n                  name='tags'\r\n                  placeholder='Tags'\r\n                  className='form-control'\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n                <label>Select Date</label>\r\n                <input\r\n                  type='date'\r\n                  name='fromDate'\r\n                  className='form-control'\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n                <input\r\n                  type='checkbox'\r\n                  name='multipleDateRange'\r\n                  onChange={this.handleChange}\r\n                ></input>\r\n                <label> &nbsp;Multiple Date Range</label>\r\n                {this.state.data.multipleDateRange && (\r\n                  <>\r\n                    <br />\r\n                    <label>To Date</label>\r\n                    <input\r\n                      type='date'\r\n                      name='To Date'\r\n                      className='form-control'\r\n                      onChange={this.handleChange}\r\n                    ></input>\r\n                  </>\r\n                )}\r\n                <br></br>\r\n                <SubmitButton\r\n                  isSubmitting={this.state.isSubmitting}\r\n                ></SubmitButton>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    return content;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as io from 'socket.io-client';\r\nimport { relativeTime } from './../../../utils/dateUtil';\r\nimport { notify } from './../../../utils/toaster';\r\nimport './MessageComp.css';\r\n\r\nconst socket_url = process.env.REACT_APP_SOCKET_URL;\r\n\r\nexport class MessageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageBody: {\r\n        message: '',\r\n        senderId: '',\r\n        receiverId: '',\r\n        senderName: '',\r\n        receiverName: '',\r\n        time: '',\r\n        state: 'sent',\r\n      },\r\n      messages: [],\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.socket = io(socket_url);\r\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\r\n    this.runSocket();\r\n  }\r\n\r\n  runSocket = () => {\r\n    // this.socket.on('hi', (data) => {\r\n    //   console.log('at hi event >>', data);\r\n    //   this.socket.emit('hello', 'hello from clinet');\r\n    // });\r\n    this.socket.emit('new-user', this.currentUser.username);\r\n\r\n    this.socket.on('reply-message-own', (data) => {\r\n      const { messages } = this.state;\r\n      messages.push(data);\r\n      this.setState({\r\n        messages,\r\n      });\r\n    });\r\n\r\n    this.socket.on('reply-message', (data) => {\r\n      const { messages, messageBody } = this.state;\r\n      messageBody.receiverId = data.senderId;\r\n      messageBody.receiverName = data.senderName;\r\n      data.state = 'received';\r\n      messages.push(data);\r\n      this.setState(\r\n        {\r\n          messages,\r\n          messageBody: {\r\n            ...messageBody,\r\n          },\r\n        },\r\n        () => {\r\n          console.log('message body after replying..', this.state.messageBody);\r\n        }\r\n      );\r\n    });\r\n\r\n    this.socket.on('users', (users) => {\r\n      this.setState({\r\n        users,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((preState) => ({\r\n      messageBody: {\r\n        ...preState.messageBody,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  send = (e) => {\r\n    e.preventDefault();\r\n    const { messageBody } = this.state;\r\n    debugger;\r\n    if (!messageBody.receiverId) {\r\n      return notify.showInfo('Please Select a user to continue');\r\n    }\r\n    // append data in messageBody\r\n    messageBody.time = Date.now();\r\n    messageBody.senderName = this.currentUser.username;\r\n    const currentSender = this.state.users.find(\r\n      (user) => user.name === this.currentUser.username\r\n    );\r\n    messageBody.senderId = currentSender.id;\r\n\r\n    this.socket.emit('new-message', messageBody);\r\n    this.setState((preState) => ({\r\n      messageBody: {\r\n        ...preState.messageBody,\r\n        message: '',\r\n      },\r\n    }));\r\n  };\r\n\r\n  selectUser = (user) => {\r\n    console.log('user >>', user);\r\n    this.setState((preState) => ({\r\n      messageBody: {\r\n        ...preState.messageBody,\r\n        receiverId: user.id,\r\n        receiverName: user.name,\r\n      },\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Lets chat</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <p>\r\n              {' '}\r\n              <strong>Messages</strong>\r\n            </p>\r\n            <div className=\"chat-box\">\r\n              {this.state.messages.map((msg, index) => (\r\n                <div className=\"container-msg\" key={index}>\r\n                  <img\r\n                    src=\"https://pbs.twimg.com/profile_images/1176237957851881472/CHOXLj9b_400x400.jpg\"\r\n                    alt=\"Avatar\"\r\n                  />\r\n                  <h3>{msg.senderName}</h3>\r\n                  <p>{msg.message}</p>\r\n                  <span className=\"time-right\">{relativeTime(msg.time)}</span>\r\n                  <small>{msg.state}</small>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"message-block\">\r\n              <form onSubmit={this.send} className=\"form-group\" noValidate>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your Message Here...\"\r\n                  value={this.state.messageBody.message}\r\n                  name=\"message\"\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control input-message\"\r\n                ></input>\r\n                <button className=\"btn btn-success btn-submit\" type=\"submit\">\r\n                  SEND\r\n                  <i\r\n                    style={{ color: 'green' }}\r\n                    className=\"fa fa-paper-plane\"\r\n                  ></i>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <p>\r\n              {' '}\r\n              <strong>Users</strong>\r\n            </p>\r\n\r\n            <div className=\"chat-box\">\r\n              {this.state.users.map((user, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"btn btn-default\"\r\n                  style={{ display: 'block' }}\r\n                  onClick={() => this.selectUser(user)}\r\n                >\r\n                  {user.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageComponent;\r\n","const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n  return fetch(`${BASE_URL}/braintree/getToken/${userId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n  return fetch(`${BASE_URL}/braintree/payment/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `${token}`,\r\n    },\r\n    body: JSON.stringify(paymentData),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n  return fetch(`${BASE_URL}/order/create/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `${token}`,\r\n    },\r\n    body: JSON.stringify({ order: createOrderData }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { emptyCart } from './../Carts/CartHelper';\r\nimport {\r\n  getBraintreeClientToken,\r\n  processPayment,\r\n  createOrder,\r\n} from './../Braintree/BraintreeComp';\r\nimport Dropin from 'braintree-web-drop-in-react';\r\n// import Product from './../common/Product/Product';\r\n\r\nconst Checkout = (props) => {\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    success: false,\r\n    clientToken: null,\r\n    error: '',\r\n    instance: {},\r\n    address: '',\r\n  });\r\n\r\n  const userId =\r\n    props.isLoggedIn && JSON.parse(localStorage.getItem('user'))._id;\r\n  const token = props.isLoggedIn && localStorage.getItem('token');\r\n  let deliveryAdd = data.address;\r\n\r\n  const getToken = (userId, token) => {\r\n    if (localStorage.getItem('token')) {\r\n      getBraintreeClientToken(userId, token).then((data) => {\r\n        if (data.error) {\r\n          // console.log(data.error);\r\n          setData({ ...data, error: data.error });\r\n        } else {\r\n          // console.log(data);\r\n          setData({ clientToken: data.clientToken });\r\n        }\r\n      });\r\n    }\r\n    // if (localStorage.getItem('token')) {\r\n    //   const userId = JSON.parse(localStorage.getItem('user'))._id;\r\n    //   const token = localStorage.getItem('token');\r\n    //   getBraintreeClientToken(userId, token).then((data) => {\r\n    //     if (data.error) {\r\n    //       console.log(data.error);\r\n    //       setData({ ...data, error: data.error });\r\n    //     } else {\r\n    //       console.log(data);\r\n    //       setData({ clientToken: data.clientToken });\r\n    //     }\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getToken(userId, token);\r\n  }, []);\r\n\r\n  const getTotal = () => {\r\n    return props.products.reduce((currentValue, nextValue) => {\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  // let showDropIn = () => {\r\n  //   <div>\r\n  //     {data.clientToken !== null && props.products.length > 0 ? (\r\n  //       <div>\r\n  //         <Dropin\r\n  //           options={{ authorization: data.clientToken }}\r\n  //           onInstance={(instance) => (data.instance = instance)}\r\n  //         />\r\n  //         <button className='btn btn-success'>Checkout</button>\r\n  //       </div>\r\n  //     ) : null}\r\n  //   </div>;\r\n  // };\r\n\r\n  // console.log('abc==>', props.isLoggedIn._id);\r\n  // console.log('abc==>', props);\r\n\r\n  const buy = () => {\r\n    // const userId = JSON.parse(localStorage.getItem('user'))._id;\r\n    // const token = localStorage.getItem('token');\r\n    setData({ loading: true });\r\n    let nonce;\r\n    let getNonce = data.instance\r\n      .requestPaymentMethod()\r\n      .then((data) => {\r\n        // console.log('data==>', data);\r\n        nonce = data.nonce;\r\n        // console.log('send nonce and total==>', nonce, getTotal(props.products));\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce,\r\n          amount: getTotal(props.products),\r\n        };\r\n        processPayment(userId, token, paymentData)\r\n          .then((response) => {\r\n            // console.log(response);\r\n            const createOrderData = {\r\n              products: props.products,\r\n              transaction_id: response.transaction.id,\r\n              amount: response.transaction.amount,\r\n              address: deliveryAdd,\r\n            };\r\n\r\n            createOrder(userId, token, createOrderData)\r\n              .then((response) => {\r\n                emptyCart(() => {\r\n                  console.log('payment success and cart is empty');\r\n                  setData({ loading: false, success: true });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                setData({ loading: false });\r\n              });\r\n\r\n            // setData({ ...data, success: response.success });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setData({ loading: false });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log('dropin errr=>', error);\r\n        setData({ ...data, error: error.message });\r\n      });\r\n  };\r\n\r\n  const showError = (error) => {\r\n    return (\r\n      <div\r\n        className='alert alert-danger'\r\n        style={{ display: error ? '' : 'none' }}\r\n      >\r\n        {error}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showSuccess = (success) => {\r\n    return (\r\n      <div\r\n        className='alert alert-info'\r\n        style={{ display: success ? '' : 'none' }}\r\n      >\r\n        Thanks! Your payment was successfull!\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showLoading = (loading) => loading && <h2>loading..</h2>;\r\n\r\n  const handleAddress = (event) => {\r\n    setData({ ...data, address: event.target.value });\r\n  };\r\n\r\n  let content = props.isLoggedIn ? (\r\n    <div onBlur={() => setData({ ...data, error: '' })}>\r\n      {data.clientToken !== null && props.products.length > 0 ? (\r\n        <div>\r\n          <div className='gorm-group mb-3'>\r\n            <label className='text-muted'>Delivery Address:</label>\r\n            <textarea\r\n              onChange={handleAddress}\r\n              className='form-control'\r\n              value={data.address}\r\n              placeholder='type your delivery address here..'\r\n            ></textarea>\r\n          </div>\r\n          <Dropin\r\n            options={{\r\n              authorization: data.clientToken,\r\n              // paypal: {\r\n              //   flow: 'vault',\r\n              // },\r\n            }}\r\n            onInstance={(instance) => (data.instance = instance)}\r\n          />\r\n          <button onClick={buy} className='btn btn-success btn-block'>\r\n            Pay\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) : (\r\n    <Link to='/'>\r\n      {' '}\r\n      <button className='btn btn-primary'>Sign in to checkout</button>\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h4>Totals: Rs {getTotal()}</h4>\r\n      {showLoading(data.loading)}\r\n      {showSuccess(data.success)}\r\n      {showError(data.error)}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Product from './../common/Product/Product';\r\nimport { getCart } from './CartHelper';\r\nimport Checkout from './../Checkout/CheckoutComp';\r\n\r\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\r\nconst Cart = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [run, setRun] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setItems(getCart());\r\n  }, [run]);\r\n\r\n  const showItems = (items) => {\r\n    return (\r\n      <div>\r\n        <h4>Your cart has {`${items.length}`} items</h4>\r\n        <hr />\r\n        {items.map((product, index) => (\r\n          <Product\r\n            key={index}\r\n            product={product}\r\n            stockLeft={product.quantity}\r\n            imageUrl={`${IMG_URL}/${product.images[0]}`}\r\n            productId={product._id}\r\n            name={product.name}\r\n            price={product.price}\r\n            description={product.description}\r\n            showAddToCartButton={false}\r\n            showRemoveProductButton={true}\r\n            cartUpdate={true}\r\n            setRun={setRun}\r\n            run={run}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const noItemsMessage = () => {\r\n    return (\r\n      <h3>\r\n        Your cart is empty.\r\n        <br />\r\n        <Link to='/home'>Continue Shopping</Link>\r\n      </h3>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <h3>Shopping cart</h3>\r\n      <div className='row'>\r\n        <div className='col-md-6'>\r\n          {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n        </div>\r\n        <div className='col-md-4'>\r\n          <h4>Your Cart Summary</h4>\r\n          <hr />\r\n          <Checkout\r\n            isLoggedIn={localStorage.getItem('token') ? true : false}\r\n            products={items}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { handleError } from '../../utils/ErrorHandler';\r\nimport { httpClient } from '../../utils/httpClient';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n// export const listOrders = (userId, token) => {\r\n//   return fetch(`${BASE_URL}/order/list/${userId}`, {\r\n//     method: 'GET',\r\n//     headers: {\r\n//       Accept: 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//   })\r\n//     .then((response) => {\r\n//       return response.json();\r\n//     })\r\n//     .catch((err) => console.log(err));\r\n// };\r\n\r\nexport const listOrders = (userId, token) => {\r\n  return httpClient\r\n    .GET(`${BASE_URL}/order/list/${userId}`, true)\r\n    .then((response) => {\r\n      // return response.json();\r\n      // console.log('response=>', response);\r\n\r\n      return { orders: response.data };\r\n      // orders: response.data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      handleError(err);\r\n    });\r\n};\r\n\r\nexport const getStatusValues = (userId) => {\r\n  return httpClient\r\n    .GET(`${BASE_URL}/order/status-values/${userId}`, true)\r\n    .then((response) => {\r\n      // return response.json();\r\n      // console.log('response=>', response);\r\n      return { statusValues: response.data };\r\n      // orders: response.data;\r\n    })\r\n    .catch((err) => {\r\n      handleError(err);\r\n    });\r\n};\r\n\r\nexport const updateOrderStatus = (orderId, userId, status) => {\r\n  return httpClient\r\n    .PUT(`${BASE_URL}/order/${orderId}/status/${userId}`, { status }, true)\r\n    .then((response) => {\r\n      console.log('response=>', response);\r\n      return response;\r\n      // orders: response.data;\r\n    })\r\n    .catch((err) => {\r\n      handleError(err);\r\n    });\r\n};\r\n\r\n// export const updateOrderStatus = (orderId, userId, token, status) => {\r\n//   return fetch(`${BASE_URL}/order/${orderId}/status/${userId}`, {\r\n//     method: 'PUT',\r\n//     headers: {\r\n//       Accept: 'application/json',\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `${token}`,\r\n//     },\r\n//     body: JSON.stringify({ status, orderId }),\r\n//   })\r\n//     .then((response) => {\r\n//       // console.log('response=>', response);\r\n//       return response.json();\r\n//     })\r\n//     .catch((err) => {\r\n//       handleError(err);\r\n//     });\r\n// };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { formatDate } from '../../utils/dateUtil';\r\n\r\nimport {\r\n  listOrders,\r\n  getStatusValues,\r\n  updateOrderStatus,\r\n} from './OrderCompHelper';\r\n\r\nconst Orders = (props) => {\r\n  const [orders, setOrders] = useState({\r\n    loading: false,\r\n    orders: '',\r\n  });\r\n  const [statusValues, setStatusValues] = useState({ statusValues: '' });\r\n\r\n  // const isLoggedIn = localStorage.getItem('token') ? true : false;\r\n  // console.log('props->', props);\r\n\r\n  const userId =\r\n    props.isLoggedIn && JSON.parse(localStorage.getItem('user'))._id;\r\n  const token = props.isLoggedIn && localStorage.getItem('token');\r\n\r\n  const loadOrders = () => {\r\n    // console.log('userID', userId);\r\n    listOrders(userId, token).then((data) => {\r\n      // console.log('data ', data.orders);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setOrders({ ...data, orders: data.orders });\r\n      }\r\n    });\r\n  };\r\n\r\n  const loadStatusValues = () => {\r\n    // getStatusValues(userId, token).then((data) => {\r\n    getStatusValues(userId).then((data) => {\r\n      // console.log('data', data);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setStatusValues(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n    loadStatusValues();\r\n    // loopOrder();\r\n  }, []);\r\n\r\n  const showOrdersLength = () => {\r\n    // console.log('order length', orders.orders.length);\r\n    if (orders.orders.length > 0) {\r\n      return (\r\n        <h4 className='card-title display-6'>\r\n          Total orders : {orders.orders.length}\r\n        </h4>\r\n      );\r\n    } else {\r\n      return <h3 className='text-danger display-2'>Empty Orders</h3>;\r\n    }\r\n  };\r\n\r\n  const showProducts = (data) => {\r\n    // console.log('data.length', data.products);\r\n    if (data.products.length > 0) {\r\n      return data.products.map((p, i) => {\r\n        return (\r\n          <>\r\n            <div\r\n              className='mb-2'\r\n              style={{ padding: '20px', border: '1px solid indigo' }}\r\n            >\r\n              <div className='input-group mb-2 mr-sm-2'>\r\n                <div className='input-group-prepend'>\r\n                  <div className='input-group-text'>Name : {p.name}</div>\r\n                  <div className='input-group-text'>Qty :{p.count}</div>\r\n                  <div className='input-group-text'>Price : Rs {p.price}</div>\r\n                  <div className='input-group-text'>Product Id : {p._id}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  // const showInput = (key, value) => {\r\n  //   <div className='input-group mb-2 mr-sm-2'>\r\n  //     <div className='input-group-prepend'>\r\n  //       <div className='input-group-text'>{key}</div>\r\n  //     </div>\r\n  //     <input type='text' value={value} className='form-control' readOnly />\r\n  //   </div>;\r\n  // };\r\n\r\n  const loopOrder = () => {\r\n    if (orders.orders.length > 0) {\r\n      return orders.orders.map((data, index) => {\r\n        console.log('data=>', data);\r\n        return (\r\n          <div\r\n            className='mt-3'\r\n            key={index}\r\n            style={{ borderBottom: '5px solid indigo' }}\r\n          >\r\n            <h5 className='card-title mb-3'>\r\n              <span className='bg-primay'>Order ID : {data._id}</span>\r\n            </h5>\r\n\r\n            <ul className='list-group mb-2'>\r\n              {/* <li className='list-group-item'>Status : {data.status}</li> */}\r\n              <li className='list-group-item'>{showStatus(data)}</li>\r\n\r\n              <li className='list-group-item'>\r\n                Transaction Id : {data.transaction_id}\r\n              </li>\r\n              <li className='list-group-item'>Amount : Rs {data.amount}</li>\r\n              <li className='list-group-item'>Ordered By : {data.user.name}</li>\r\n\r\n              <li className='list-group-item'>\r\n                Username : {data.user.username}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                Delivery Addr : {data.address}\r\n              </li>\r\n\r\n              <li className='list-group-item'>\r\n                Ordered On : {formatDate(data.createdAt)}\r\n              </li>\r\n            </ul>\r\n            <h3 className='mt-4 mb-4 font-italic'>\r\n              Total Products in order : {data.products.length}\r\n            </h3>\r\n            {showProducts(data)}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (e, orderId) => {\r\n    // console.log('order status updates..');\r\n    updateOrderStatus(orderId, userId, e.target.value).then((data) => {\r\n      if (data.error) {\r\n        console.log('Failed');\r\n      } else {\r\n        console.log('success');\r\n        loadOrders();\r\n      }\r\n    });\r\n  };\r\n\r\n  const showStatus = (o) => (\r\n    <div className='form-group'>\r\n      <h3>Status : {o.status}</h3>\r\n      <select\r\n        className='form-control'\r\n        onChange={(e) => handleStatusChange(e, o._id)}\r\n      >\r\n        <option>Update Status: </option>\r\n        {/* {console.log('statusvalue', statusValues)} */}\r\n        {statusValues.statusValues.map((status, index) => (\r\n          <option key={index} value={status}>\r\n            {status}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className='card border-dark mb-3'>\r\n          <div className='card-header'>{showOrdersLength()}</div>\r\n          <div className='card-body text-dark'>{loopOrder()}</div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='row'>\r\n        <div className='col-md-8 offset-md-2'>\r\n          {showOrdersLength()}\r\n          {loopOrder()}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React from 'react';\r\n\r\nconst DashboardComp = () => {\r\n  const currentUser = JSON.parse(localStorage.getItem('user'));\r\n  console.log('current user=>', currentUser);\r\n  return (\r\n    <>\r\n      <h2>User Dashboard</h2>\r\n      <div className='card mb-3'>\r\n        <h4 className='card-header'>User Information</h4>\r\n        <ul className='list-group'>\r\n          <li className='list-group-item'>Name : {currentUser.name} </li>\r\n          <li className='list-group-item'>Email : {currentUser.email} </li>\r\n          <li className='list-group-item'>\r\n            Role :{' '}\r\n            {currentUser.role !== 1\r\n              ? currentUser.role === 2\r\n                ? 'Customer'\r\n                : 'Vendor'\r\n              : 'Admin'}\r\n          </li>\r\n\r\n          <li className='list-group-item'>Gender : {currentUser.gender} </li>\r\n          <li className='list-group-item'>Phone : {currentUser.phoneNumber}</li>\r\n          <li className='list-group-item'>\r\n            Temporary Address :{' '}\r\n            {currentUser.address.tempAddress.length > 1\r\n              ? currentUser.address.tempAddress.join(',')\r\n              : currentUser.address.tempAddress}\r\n          </li>\r\n          <li className='list-group-item'>\r\n            Permanent Address : {currentUser.address.permanentAddress}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {currentUser.role !== 1 ? (\r\n        <div className='card'>\r\n          <h4 className='card-header'>Purchase History</h4>\r\n          <ul className='list-group'>\r\n            <li className='list-group-item'>\r\n              <table className='table'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.N</th>\r\n                    <th>Name</th>\r\n                    <th>Amount</th>\r\n                    <th>Category</th>\r\n                    <th>Quantity</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentUser.history.map((item, index) => (\r\n                    <tr key={item._id}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.amount}</td>\r\n                      <td>{item.category}</td>\r\n                      <td>{item.quantity}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardComp;\r\n","import React from 'react';\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ForgotPassword } from './auth/forgotPassword/ForgotPasswordComponent';\r\nimport { Login } from './auth/login/Login.component';\r\nimport { Register } from './auth/register/Register.component';\r\nimport { ResetPassword } from './auth/ResetPassword/ResetPasswordComp';\r\n// import { Header } from './common/header/Header.component';\r\nimport { Header } from './common/header/HeaderComponent';\r\n// import Product from './common/Product/Product';\r\nimport { HomeComp } from './Home/HomeComp';\r\n\r\n// import { Sidebar } from './common/sidebar/Sidebar.component';\r\nimport { Sidebar } from './common/sidebar/SidebarComponent';\r\n\r\nimport { AddProduct } from './Products/AddProduct/AddProductComponent';\r\nimport { EditProduct } from './Products/EditProduct/EditProductComponent';\r\nimport ProductDetailsLanding from './Products/ProductDetailsLanding/ProductDetailsLanding';\r\nimport { SearchProduct } from './Products/SearchProduct/SearchProductComp';\r\nimport { ViewProducts } from './Products/ViewProduct/ViewProductComponent';\r\nimport MessageComponent from './Users/Messages/MessageComp';\r\nimport Cart from './Carts/CartComp';\r\nimport Orders from './Orders/OrderComp';\r\nimport DashboardComp from './Dashboard/DashboardComp';\r\n\r\n// const Dashboard = (props) => {\r\n//   // console.log('props in Dashboard ', props);\r\n//   return <p>Dashboard Page</p>;\r\n// };\r\n\r\nconst About = (props) => {\r\n  // console.log('props in About ', props);\r\n  return <p>About Page</p>;\r\n};\r\n\r\nconst Settings = (props) => {\r\n  // console.log('props in Settings ', props);\r\n  return <p>Settings Page</p>;\r\n};\r\n\r\nconst NotFound = (props) => {\r\n  // console.\r\n  return (\r\n    <div className='content'>\r\n      <h2>Not Found</h2>\r\n      {/* <img width=\"400\" src=\"./images/notfound.jpg\" alt=\"not_found.png\"></img> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        localStorage.getItem('token') ? (\r\n          <>\r\n            <Header isLoggedIn={true}></Header>\r\n            <div>\r\n              <Sidebar isLoggedIn={true} />\r\n              {/* <div className=\"main-content\">\r\n                  <Component {...routeProps}></Component>\r\n                </div> */}\r\n              <div className='main'>\r\n                <Component isLoggedIn={true} {...routeProps}></Component>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Redirect to='/'></Redirect>\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => (\r\n        <>\r\n          <Header\r\n            isLoggedIn={localStorage.getItem('token') ? true : false}\r\n          ></Header>\r\n          <Sidebar isLoggedIn={localStorage.getItem('token') ? true : false} />\r\n          {/* <div className=\"main-content\">\r\n           */}\r\n          <div className='main'>\r\n            <Component {...routeProps}></Component>\r\n          </div>\r\n        </>\r\n      )}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => (\r\n        <>\r\n          <Header />\r\n          <div className='main-content'>\r\n            <Component {...routeProps}></Component>\r\n          </div>\r\n        </>\r\n      )}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport const AppRouting = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      {/* <Header isLoggedIn={true}></Header> */}\r\n      <Switch>\r\n        <AuthRoute path='/' exact component={Login}></AuthRoute>\r\n\r\n        <AuthRoute path='/register' component={Register} />\r\n        <AuthRoute path='/forgot_password' component={ForgotPassword} />\r\n        <AuthRoute path='/reset_password/:token' component={ResetPassword} />\r\n        <ProtectedRoute path='/about' component={About} />\r\n        <ProtectedRoute path='/settings' component={Settings} />\r\n        {/* <ProtectedRoute path='/home' component={HomeComp}></ProtectedRoute> */}\r\n        <PublicRoute path='/home' component={HomeComp}></PublicRoute>\r\n\r\n        <PublicRoute path='/cart' component={Cart}></PublicRoute>\r\n\r\n        {/* <ProtectedRoute path=\"/home/:name\" component={Home}></ProtectedRoute> */}\r\n\r\n        <ProtectedRoute\r\n          path='/add_product'\r\n          component={AddProduct}\r\n        ></ProtectedRoute>\r\n        <ProtectedRoute path='/add_product'></ProtectedRoute>\r\n        <ProtectedRoute\r\n          path='/view_products'\r\n          component={ViewProducts}\r\n        ></ProtectedRoute>\r\n        <ProtectedRoute\r\n          path='/edit_product/:id'\r\n          component={EditProduct}\r\n        ></ProtectedRoute>\r\n        <ProtectedRoute\r\n          path='/product_details/:id'\r\n          component={ProductDetailsLanding}\r\n        ></ProtectedRoute>\r\n        <ProtectedRoute\r\n          path='/dashboard'\r\n          exact\r\n          component={DashboardComp}\r\n        ></ProtectedRoute>\r\n        <ProtectedRoute\r\n          path='/admin/dashboard'\r\n          component={DashboardComp}\r\n        ></ProtectedRoute>\r\n        <ProtectedRoute path='/orders' component={Orders}></ProtectedRoute>\r\n        <PublicRoute\r\n          path='/search_product'\r\n          component={SearchProduct}\r\n        ></PublicRoute>\r\n        <PublicRoute path='/message' component={MessageComponent}></PublicRoute>\r\n        <PublicRoute component={NotFound}></PublicRoute>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import {\r\n  PRODUCTS_RECEIVED,\r\n  PRODUCT_RECEIVED,\r\n  PRODUCT_REMOVED,\r\n  REVIEW_ADDED,\r\n  SET_ISLOADING,\r\n  SET_ISSUBMITTING,\r\n  SET_PAGE_NUMBER,\r\n} from '../Constants/ProductConstant';\r\n\r\nconst defaultState = {\r\n  isLoading: false,\r\n  products: [],\r\n};\r\n\r\nexport const ProductReducer = (state = defaultState, action) => {\r\n  // console.log('At reducer with state ==>', state);\r\n  console.log('At reducer ==>', action);\r\n\r\n  switch (action.type) {\r\n    case SET_ISLOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n\r\n    case PRODUCTS_RECEIVED:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n\r\n    case PRODUCT_REMOVED:\r\n      const { products } = state;\r\n      products.forEach((item, index) => {\r\n        if (item._id === action.productId) {\r\n          products.splice(index, 1);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        products: [...products],\r\n      };\r\n\r\n    case PRODUCT_RECEIVED:\r\n      return {\r\n        ...state,\r\n        product: action.payload,\r\n      };\r\n\r\n    case REVIEW_ADDED:\r\n      return {\r\n        ...state,\r\n        product: action.payload,\r\n      };\r\n\r\n    case SET_PAGE_NUMBER:\r\n      return {\r\n        ...state,\r\n        pageNumber: action.payload,\r\n      };\r\n\r\n    case SET_ISSUBMITTING:\r\n      return {\r\n        ...state,\r\n        isSubmitting: action.payload,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { ProductReducer } from './ProductReducer';\r\n\r\nexport const RootReducer = combineReducers({\r\n  product: ProductReducer,\r\n  user: {},\r\n  notification: {},\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { RootReducer } from './Reducers';\r\n\r\nconst initialState = {\r\n  product: {\r\n    products: [],\r\n    isLoading: false,\r\n    pageNumber: 1,\r\n    pageSize: 5,\r\n    reviews: [],\r\n    product: {},\r\n    isSubmitting: false,\r\n  },\r\n  // user: {\r\n  //   data: [],\r\n  //   isLoading: false,\r\n  //   pageNumber: 1,\r\n  //   pageSize: 10,\r\n  // },\r\n  // notification: {\r\n  //   data: [],\r\n  //   isLoading: false,\r\n  //   pageNumber: 1,\r\n  //   pageSize: 10,\r\n  // },\r\n};\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  RootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouting } from './AppRouting';\r\nimport { store } from '../Redux/store';\r\n\r\nconst App = () => {\r\n  // console.log('incoming data >>', args);\r\n  // functional component must have return block\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <AppRouting />\r\n      </Provider>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.component';\r\n// const content = <h2>Lets create our own file.</h2>;\r\n\r\n// ReactDOM.render(content, document.getElementById('root'));\r\n\r\nconst container = document.getElementById('root');\r\nReactDOM.render(<App />, container);\r\n"],"sourceRoot":""}